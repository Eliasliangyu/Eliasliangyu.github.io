<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://eliasliangyu.github.io/"/>
  <updated>2019-06-16T10:56:44.704Z</updated>
  <id>https://eliasliangyu.github.io/</id>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>如何读懂代码</title>
    <link href="https://eliasliangyu.github.io/2019/06/16/%E5%A6%82%E4%BD%95%E8%AF%BB%E6%87%82%E4%BB%A3%E7%A0%81/"/>
    <id>https://eliasliangyu.github.io/2019/06/16/如何读懂代码/</id>
    <published>2019-06-16T10:44:26.000Z</published>
    <updated>2019-06-16T10:56:44.704Z</updated>
    
    <content type="html"><![CDATA[<h1>如何读懂代码</h1><p><b><a href="https://www.jianshu.com/p/1850db5d2891" target="_blank" rel="noopener">——/转载自简书jianshu.com/——</a><b></b></b></p><p>我们在写程序时，有不少时间都是在看别人的代码。 例如看小组的代码，看小组整合的守则，若一开始没规划怎么看， 就会看得云山雾罩不知其所然。</p><p>不管是参考也好，从开源抓下来研究也好，为了了解箇中含意，在有限的时间下，不免会对庞大的源代码解读感到压力。</p><p>以下来介绍一下读代码的心法：</p><ul><li>读懂程序代码，使心法皆为我所用。</li><li>摸清架构，便可轻松掌握全貌。</li><li>优质工具在手，读懂程序非难事。</li><li>望文生义，进而推敲组件的作用。</li><li>找到程序入口，再由上而下抽丝剥茧。</li><li>阅读的乐趣，透过程序认识作者。</li></ul><h2>读懂程序，使心法皆为我所用</h2><p>程序是别人写的，只有原作者才真的了解程序的用途及涵义。许多程员心里都有一种不自觉的恐惧感，深怕被迫去碰触其他人所写的程序。但是，与其抗拒接收别人的程序，不如彻底了解相关的语言和惯例，当成是培养自我实力的基石。</p><p>对大多数的程序员来说，撰写程序或许是令人开心的一件事情，但我相信，有更多人视阅读他人所写成的程序为畏途。许多人宁可自己重新写过一遍程序，也不愿意接收别人的程序，进而修正错误，维护它们，甚至加强功能。</p><p>这其中的关键究竟在何处呢？若是一语道破，其实也很简单，程序是别人写的，只有原作者才真的了解程序的用途及涵义。许多程序员心里都有一种不自觉的恐惧感，深怕被迫去碰触其他人所写的程序。这是来自于人类内心深处对于陌生事物的原始恐惧。</p><p>读懂别人写的程序，让你收获满满。不过，基于许多现实的原因，程序员时常受迫要去接收别人的程序。例如，同事离职了，必须接手他遗留下来的工作，也有可能你是刚进部门的菜鸟，而同事经验值够了，升级了，风水轮流转，一代菜鸟换菜鸟。甚至，你的公司所承接的项目，必须接手或是整合客户前一个厂商所遗留下来的系统，你们手上只有那套系统的源代码（运气好时，还有数量不等的文件） 。</p><p>诸如此类的故事，其实时常在程序员身边或身上持续上演着。许多程序员都将接手他人的程序，当做一件悲惨的事情。每个人都不想接手别人所撰写的程序员，因为不想花时间去探索，宁可将生产力花在产生新的程序，而不是耗费在了解这些程序上。</p><p>很遗憾的是，上述的情况对程序员来说很难避免。我们总是必须碰触到其他人所写成的程序，甚至必须了解它，加以修改。对于这项需求，在现今开放源代码的风气如此盛行的今日，你可以透过开放源码学习到新的技术，学习到高手的架构设计，大幅提高学习的效率及效果。你甚至可以直接自开放源代码项目中抽取，提炼出自己所需的程序，站在巨人的肩膀上，直接由彼端获得所需的生产力。从这个观点来看，读懂别人所写的程序，就不再只是从负面观点的“被迫接收” ，而是极具正面价值的“汲取养份。 ”</p><p>先了解系统架构与行为模式，再细读倘若撰写程序是程序员的重要技艺之一，那么读懂别人的程序，接着加以修改，也势必是另一个重要的技艺。</p><p>如果你不能熟悉这项工作，不仅在遭逢你所不愿面对的局面时，无法解决眼前接手他人程序的难题，更重要的是，当你看着眼前现成的程序，却不知如何从中撷取自己所需，导致最后只能入宝山空手回，望之兴叹。</p><p>接触他人的程序，大致上可以分为三种程度：</p><ol><li>了解</li><li>修改，扩充</li><li>抽取，提炼。</li></ol><p>了解别人的程序是最基础的工作，倘若不能了解自己要处理的程序，就甭论修改或扩充，更不可能去芜存菁，从中萃取出自己所需，回收再利用别人所撰写的程序。虽说是“阅读” ，但程序并不像文章或小说一样，透过这种做法，便能够获得一定程度的了解。阅读文章或小说时，几乎都是循序地阅读，你只消翻开第一页，一行行阅读下去即可。但是，有许多程序员在试着阅读其他人的程序时，却往往有不知如何读起的困难。</p><p>或许找到系统的第一页（也就是程序执行的启始点）并不难，但是复杂度高的系统，有时十分庞大，有时千头万绪。</p><p>从程序的启始点开始读起，一来要循序读完所有的程序旷日费时，二来透过这种方式来了解系统，很难在脑中构建出系统的面貌，进而了解到系统真正的行为。所以，阅读程序员的重点，不在于读完每一行程序员，而是在于有效率地透过探索及阅读，从而了解系统的架构及行为模式。以便在你需要了解任何片段的细节实现时，能够很快在脑上对映到具体的程序员位置，直到那一刻，才是细读的时机。</p><h3>熟悉沟通语言与惯例用语</h3><p>不论如何，有些基本的准备，是阅读他人程序员时必须要有的。</p><p>首先，你最好得了解程序员使用的编程语言。想要读懂法文写成的小说，总不能连法文都不懂吧。有些情况则很特殊。我们虽然不懂该程序员撰写所用的语言，但是因为现代语言的高阶化，而且流行的编程语言多半都是血统相近，所以即使不那么熟悉，有时也可勉力为之。</p><p>除了认识所用语言之外，再来就是要先确认程序员所用的命名惯例（命名惯例） 。了解命名惯例很重要，不同的程序员或开发团队，差异可能很大。</p><p>这命名惯例涵盖的范围通常包括了变数的名称，函数的名称，类别（如果是面向对象的话）的名称，源代码档案，甚至是项目建构目录的名称。倘若使用了像设计模式之类的方法，这些名称更有一些具体的表述方式。</p><p>命名惯例有点像是程序员在编程语言之上，另行建构的一组沟通行话。程序员会透过共通约束，遵守的命名惯例，来表达一些较高阶的概念。例如，有名的匈牙利式命名法，便将变数名称以属性，型别，说明合并在一起描述。对程序员来说，这种方式能够提供更丰富的资讯，以了解该变数的作用及性质。</p><p>对程序员阅读来说，熟悉这个做法之所以重要，是因为当你了解整个系统所采用的惯例时，你便能试着以他们所共同操用的语汇来进行理解。倘若，不能了解其所用的惯例，那么这些额外提供的资讯，就无法为你所用。像以设计模式写成的程序员，同样处处充满着模式的名称，诸如：工厂，门面，代理等等。以这些名称指涉的类别，也直接透过名称，表达了它们自身的作用。对于懂得这命名惯例的读者来说，不需要深入探索，也能很快捕捉到这些类别的意义。</p><p>当你拿到一套必须阅读的程序员时，最好先取得命名惯例的说明文件。然而，并不是每套程序员都附有此类的说明文件。另一个方式，就是自己到程序员中，大略浏览一遍，有经验的程序员可以轻易发掘出该系统所用的命名惯例。</p><p>常见的命名方式不脱那几类，这时候经验就很重要，倘若你知道的惯例越多，就越能轻易识别他人所用的惯例。如果运气很糟，程序员所用的惯例是前所未见的，那么你也得花点时间归纳，凭自己的力量找出这程序员命名上的规则。</p><h3>掌握程序员撰写者的心态与习惯</h3><p>大多数的程序员，基本上都依循一致的命名惯例。不过运气更差的时候，一套系统中可能会充斥着多套命名惯例。这有可能是因为开发团队由多组人马所构成，每组人马都有不同的文化，而在项目开发管理又没有管控得宜所造成。最糟的情况，程序员完全没有明显的惯例可言，这时候阅读的难度就更高了。</p><p>想要阅读程序员，得先试着体会程序员作者的“心” 。想要这么做，就得多了解对方所使用的语言，以及惯常运用的语汇。在下一回中，我们将继续探讨阅读程序员的相关议题。</p><h2>摸清架构，便可轻松掌握全貌</h2><p>在本文中，我们的重点放在：要了解一个系统，最好是采取由上至下的方式。先试着捕捉系统架构性的观念，不要过早钻进细节，因为那通常对于你了解全貌，没有多大的帮助。阅读程序员不需要从第一行读起，我们的目的并不是在于读遍每一段程序员。</p><p>基于许多原因，程序员需要阅读其他人所写成的程序员。而对程序设计2.0时代的程序员来说，最正面的价值在于，能读懂别人程序的人，才有能力从中萃取自己所需的程序，借以提高生产力。</p><h3>阅读程序员的目的，在于了解全貌而非细节</h3><p>想要读懂别人程序员的根本基础，便是了解对方所用的编程语言及命名惯例。有了这个基础之后，才算是具备了基本的阅读能力。正如我之前提到的─ ─想要读懂法文写成的小说，总不能连法文都不懂吧。阅读程序员和阅读文学作品，都需要了解撰写所用的语言及作者习用的语汇。</p><p>但我们在阅读文学作品通常是采循序的方式，也就是从第一页开始，一行一行地读下去，依循作者为你铺陈的步调，逐渐进到他为你准备好的世界里。阅读程序员却大大不同。我们很少从第一行开始读起，因为除非它是很简单的单执行绪程序，否则很少这么做。因为要是这么做，就很难了解整个系统的全貌。是的，我们这边提到了一个重点，阅读程序员的目的在于了解系统的全貌，而不是在于只是为了地毯式的读遍每一段程序员。</p><p>就拿面向对象编程语言所写成的系统来说，整个系统被拆解，分析成为一个个独立的类别。阅读个别类别的程序员，或许可以明白每项类别物件个别的行为。但对于各类别物件之间如何交互影响，如何协同工作，又很容易陷入盲人摸象的困境。这是因为各类别的程序员，只描述个别物件的行为，而片段的阅读就只能造就片面的认识。</p><h3>由上而下理清架构后，便可轻易理解组成关系</h3><p>如果你想要跳脱困境，不想浪费大量时间阅读程序员，却始终只能捕捉到对系统片段认识，就必须转换到另一种观点来看待系统。从个别的类别行为着手，是由下至上（自下而上）的方法;在阅读程序员时，却应该先采由上至下（自上而下）的方式。对程序员的阅读来说，由上至下意谓着，你得先了解整个系统架构。</p><p>系统的架构是整个系统的骨干，支柱。它表现出系统最突出的特征。知道系统架构究竟属于那一种类型，通常大大有益于了解系统的个别组成之间的静态及动态关系。有些系统因为所用的技术或框架的关系，决定了最上层的架构。例如，采用的Java Servlet的/ JSP的技术的应用系统，最外层的架构便是以J2EE的（或起码的J2EE中的Web容器）为根本。</p><p>使用的Java Servlet的/ JSP的技术时，决定了某些组成之间的关系。例如， Web容器依据web.xml中的内容载入所有的Servlets ，听众，以及过滤器。每当语境发生事件（例如初始化）时，它便会通知监听类别。每当它收到来自客户端的请求时，便会依循设定的所有过滤器链，让每个过滤器都有机会检查并处理此一请求，最后再将请求导至用来处理该请求的Servlet的。</p><p>当我们明白某个系统采用这样的架构时，便可以很容易地知道各个组成之间的关系。即使我们还不知道究竟有多少Servlets ，但我们会知道，每当收到一个请求时，总是会有个相对应的服务器来处理它。当想要关注某个请求如何处理时，我应该去找出这个请求对应的服务器。</p><h3>了解架构，必须要加上层次感</h3><p>同样的，以爪哇写成的网页应用程序中，也许会应用诸如Struts的之类的的MVC框架，以及像Hibernate的这样的资料存取框架。它们都可以视为最主要的架构下的较次级架构。而各个应用系统，甚至有可能在Struts的及休眠之下，建立自有的更次级的架构。</p><p>也就是说，当我们谈到“架构”这样的观念时，必须要有层次感。而不论是那一层级的架构，都会定义出各自的角色，以及角色间的关系。对阅读者来说，相较于直接切入最细微的单一角色行为，不如了解某个特定的架构中，究竟存在多少角色，以及这些角色之间的互动模式，比较能够帮助我们了解整个系统的运作方式。</p><p>这是一个很重要的关键，当你试着进到最细节处之前，应该先试着找出参与的角色，及他们之间的关系。例如，对事件驱动式的架构而言，有3个很重要的角色。一个是事件处理的分派器（事件调度） ，一个是事件产生者（事件发生器） ，另一个则是事件处理器（事件处理程序） 。</p><p>事件产生器产生事件，并送至事件分派器，而事件分派器负责找出各事件相对应的事件处理器，并且转交该事件，并命令事件处理器加以处理。像的图形用户界面的Windows应用程序，便是采用事件驱动式的架构。</p><p>当你知道此类的应用程序皆为事件驱动式的架构时，你便可以进一步得知，在这样的架构下会有3种主要的角色。虽然也许还不清楚整个系统中，究竟会需要处理多少事件的类型，但对你而言，已经建立了对系统全貌最概观的认识。</p><p>虽然你还不清楚所有的细节，但诸如确切会有那些事件类型之类的资讯，在此刻还不重要─ ─不要忘了，我们采取的是由上而下的方式，要先摸清楚主建筑结构，至于壁纸的花色怎么处理，那是到了尾声时才会做的事。</p><h3>探索架构的第一件事：找出系统如何初始化</h3><p>有经验的程序员，对于时常被运用的架构都很熟悉。常常只需要瞧上几眼，就能明白一个系统所用的架构，自然就能够直接联想到其中会存在的角色，以及角色间的关系。然而，并不是每个系统所用的架构，都是大众所熟悉，或是一眼能够望穿的。这时候，你需要探索。目标同样要放在界定其中的角色，以及角色间的静态，动态关系。</p><p>不论某个系统所采用的架构是否为大部分人所熟知的，在试着探索一个系统的长相时，我们应该找出来几个答案，了解在它所用的架构下，下列这件事是如何被完成的：一，系统如何初始化，二，与这个系统相接的其他系统（或使用者）有那些，而相接的界面又是什么;三，系统如何反应各种事件，四，系统如何处理各种异常及错误。</p><p>系统如何初始化是很重要的一件事，因为初始化是为了接下来的所有事物而做的准备。从初始化的方式，内容，能知道系统做了什么准备，对于系统会有什么行为展现，也就能得窥一二了。之所以要了解与系统相接的其他系统（或使用者），为的是要界定出系统的边界。其他的系统可能会提供输入给我们所探索的系统，也可能接收来自这系统的输出，了解这边界所在，才能确定系统的外观。</p><p>而系统所反应的事件类型，以及如何反应，基本上就代表着系统本身的主要行为模式。最后，我们必须了解系统处理异常及错误的方式，这同样也是系统的重要行为，但容易被忽略。之前，我们提到必须先具备一个系统的语言基础，才能够进一步加以阅读，而在本文中，我们的重点放在：要了解一个系统，最好是采取由上至下的方式。先试着捕捉系统架构性的观念，不要过早钻进细节，因为那通常对于你了解全貌，没有多大的帮助。</p><h2>优质工具在手，读懂程序非难事</h2><p>系统的复杂度往往超过人脑的负荷。阅读程序员的时候，你会需要更多工具提供协助。使用好的整合式开发环境（ IDE ）的或文字编辑器，就能提供最基本的帮助。</p><p>阅读程序员的动作，可以是很原始的，利用最简单的文字编辑器，逐一开启源代码，然后凭借着一己的组织能力，在不同的程序员间跳跃，拼凑出脑中想要构建的图像。</p><p>不过，系统的复杂度往往超过人脑的负荷。阅读程序员的时候，你会需要更多工具提供协助。使用好的整合式开发环境（ IDE ）的或文字编辑器，就能提供最基本的帮助。</p><h3>善用文字编辑器或IDE中，加速解读程序员</h3><p>许多文字编辑器提供了常见编程语言的语法及关键字标示功能。这对于阅读来说，绝对能够起很大的作用。有些文字编辑器（例如我常用的编辑器及偶而使用的记事本+ + ），甚至能够自动列出某个原始档中所有定义的函数清单，更允许你直接从清单中选择函数，直接跳跃到该函数的定义位置。这对于阅读程序员的人来说，就提供了极佳的便利性。</p><p>因为在阅读程序员时，最常做的事，就是随着程序中的某个控制流，将阅读的重心，从某个函数移至它所调用的另一个函数。所以对程序员来说，阅读程序员时最常做的事之一就是：找出某个函数位在那一个原始档里，接着找到该函数所在的位置。</p><p>好的的IDE能够提供的协助就更多了。有些能够自动呈现一些额外的资讯，最有用的莫过于函数的原型宣告了。例如，有些的IDE支援当游标停留在某函数名称上一段时间后，它会以提示的方式显示该函数的原型宣告。</p><p>对阅读程序员的人来说，在看到程序员中调用到某个函数时，可以直接利用这样的支援，立即取得和这个函数有关的原型资讯，马上就能知道调用该函数所传入的各个引数的意义，而不必等到将该函数的定义位置找出后，才能明白这件事。</p><h4><code>grep</code>是一个基本而极为有用的工具</h4><p>除了选用好的文字编辑器或的IDE 之外，还有一个基本，但却极为有用的工具，它就是<code>grep</code>。熟悉的Unix/Linux系统的程序员对<code>grep</code>这个程序多半都不陌生。 <code>grep</code> 最大的用途，在于它允许我们搜寻某个目录（包括递回进入所有子目录）中所有指定档案，是否有符合指定条件（常数字串或正规表示式）档案。</p><p>倘若有的话，则能帮你指出所在的位置。这在阅读程序员时的作用极大。当我们随着阅读的脚步，遇上了任何一个不认识，但自认为重要的类别，函数，资料结构定义或变数，我们就得找出它究竟位在这茫茫程序员海中的何处，才能将这个图块从未知变为已知。</p><p>grep之所以好用，就是在于当我们发现某个未知的事物时，可以轻易地利用它找出这个未知的事物究竟位在何方。此外，虽说grep按是Unix系统的标准公用程序之一，但是像视窗这样子的平台，也有各种类型的<code>grep</code>命令。对于在视窗环境工作的程序员来说，可以自行选用觉得称手的工具。</p><h4><code>gtags</code> 可建立索引，让搜索更有效率</h4><p><code>grep</code> 虽然好用，但是仍然有一些不足之处。第一个缺点在于它并不会为所搜寻的源代码档案索引。每当你搜寻时，它都会逐一地找出所有的档案，并且读取其中的所有内容，过滤出满足指定条件的档案。当项目的源代码数量太大时，就会产生搜寻效率不高的问题。</p><p>第二个缺点是它只是一个单纯的文字档搜寻工具，本身并不会剖析源代码所对应的语言语法。当我们只想针对“函数”名称进行搜寻时，它有可能将注解中含有该名称的源代码，也一并找了出来。</p><p>针对<code>grep</code>的缺点，打算阅读他人程序员的程序员，可以考虑使用像是<code>gtags</code>这样子的工具。 <code>gtags</code>是源代码的GNU全局标记系统，它不只搜寻文字层次，而且因为具备了各种语言的语法剖析器，所以在搜寻时，可以只针对和语言有关的元素，例如类别名称，函数名称等。</p><p>而且，它能针对源代码的内容进行索引，这意谓一旦建好索引之后，每次搜寻的动作，都毋需重新读取所有源代码的内容并逐一搜寻。只需要以现成的索引结构为基础，即可有效率的寻找关键段落。</p><p><code>gtags</code> 提供了基于命令列的程序，让你指定源代码所在的目录执行建立索引的动作。它同时也提供程序让你得如同操作grep按一般，针对索引结构进行搜寻及检索。它提供了许多有用的检索方式，例如找出项目中定义某个资料结构的档案及定义所在的行号，或者是找出项目中所有引用某资料结构的档案，以及引用处的行号。</p><p>这么一来，你就可以轻易地针对阅读程序员时的需求予以检索。相较于<code>grep</code> 按所能提供的支援，<code>gtags</code>这样的工具，简直是强大许多。</p><h2>望文生义，进而推敲组件的作用</h2><p>先建立系统的架构性认识，然后透过名称及命名惯例，就可以推测出各组件的作用。例如：当AOL的Winamp尝试着初始化一个插件时，它会调用这个结构中的初始化函数，以便让每个插件程序有机会初始化自己。当AOL的Winamp打算结束自己或结束某个插件的执行时，便会调用结束函数。</p><p>在阅读程序的细节之前，我们应先试着捕捉系统的运作情境。在采取由上至下的方式时，系统性的架构是最顶端的层次，而系统的运作情境，则是在它之下的另一个层次。</p><h2>好的说明文件难求，拼凑故事的能力很重要</h2><p>有些系统提供良善的说明文件，也许还利用UML的充分描述系统的运行情况。那么对于阅读者来说，从系统的分析及设计文件着手，便是快速了解系统运作情境的一个途径。</p><p>但是，并不是每个软件项目都伴随着良好的系统文件，而许多极具价值的开放源代码项目，也时常不具备此类的文件。对此，阅读者必须尝试自行捕捉，并适度地记录捕捉到的运作情境。</p><p>我喜欢将系统的运作情境，比拟成系统会上演的故事情节。在阅读细节性质的程序员前，先知道系统究竟会发生那些故事，是必备的基本功课。你可以利用熟悉或者自己发明的表示工具，描述你所找到的情境。甚至可以只利用简单的列表，直接将它们列出。只要能够达到记录的目的，对程序员阅读来说，都能够提供帮助。或者，你也可以利用基于UML中的类别图，合作图，循序图之类的表示方法，做出更详细的描述。<br>当你能够列出系统可能会有的情境，表示你对系统所具备的功能，以及在各种情况下的反应，都具备概括性的认识。以此为基础，便可在任何需要的时候，钻进细节处深入了解。</p><h2>探索架构的第一步──找到程序的入口</h2><p>在之前，我们在一个开发项目中，曾经需要将系统所得到的的MP3音讯档，放至iPod的这个极受欢迎的播放设备中。</p><p>虽然iPod的本身也可以做为可移动式的储存设备，但并不是单纯地将MP3播放档案放到中的iPod ，就可以让苹果的播放器认得这个档案，甚至能够加以播放。<br>这是因为苹果利用一个特殊的档案结构（ iTunes的数据库） ，记录播放器中可供播放的乐曲，播放清单以及乐曲资讯（例如专辑名称，乐曲长度，演唱者等） 。为了了解并且试着重复使用既有的程序员，我们找到了一个AOL的Winamp的iPod的外挂程序（插件） 。</p><p>AOL的Winamp是个人电脑上极受欢迎的播放软件，而我们找到的外挂程序，能让的软件直接显示连接至电脑的的iPod中的歌曲资讯，并且允许的软件直接播放。</p><p>我们追踪与阅读这个外挂程序的思路及步骤如下，首先，我们要先了解外挂程序的系统架构。很明显的，大概浏览过源代码后，我们注意到它依循着AOL的Winamp为插件程序所制定的规范，也就是说，它是实现成的Windows上的DLL的，并且透过一个叫做winampGetMediaLibraryPlugin的DLL的函数，提供一个名为winampMediaLibraryPlugin的结构。<br>当我们不清楚系统的架构究竟为何时，我们会试着探索，而第一步，便是找到程序的入口。如何找到呢？这会依程序的性质不同而有所差别。<br>对一个本身就是可独立执行的程序来说，我们会找启动程序的主要函数，例如对的C/C++来说就是<code>main()</code>函数，而对Java来说，便是静态方法<code>main()</code> 。在找到入口后，再逐一追踪，摸索出系统的架构。</p><p>但有时，我们阅读的程序如果是类库或函数库，本身并不具单一入口，此类的程序具有多重的入口──每个允许用户端程序调用的函数或类别，都是它可能的入口。</p><p>例如，对AOL的Winamp的 iPod的插件来说，它是一个动态链接库形式的函数库，所以当我们想了解它的架构时，必须要先找出它对外提供的函数，而对的Windows的DLL来说，对外提供的函数，皆会以dllexport这个关键字来修饰。所以，不论是利用grep按或gtags之类的工具，我们可以很快从源代码中，找到它只有一个DLL的函数（这对我们而言，真是一个好消息） ，而这个函数便是上述的winampGetMediaLibraryPlugin 。</p><h2>系统多会采用相同的架构处理插件程序</h2><p>如果经验不够的话，也许无法直接猜出这个函数的作用。 不过，如果你是个有经验的程序员，多半能从函数所回传的结构，猜出这个函数实际的用途。而事实上，当你已经知道它是一个插件程序时，就应该要明白，它可能采用的，就是许多系统都采用的相同架构处理插件程序。</p><p>当一个系统采用所谓插件形式的架构时，它通常不会知道它的插件究竟会怎么实现，实现什么功能。它只会规范插件程序需要满足某个特定界面。当系统初始化时，所有的插件都可以依循相同的方式，向系统注册，合法宣示自己的存在。</p><p>虽然系统并不确切知道插件会有什么行为展现，但是因为它制定了一个标准的界面，所以系统仍然可以预期每个插件能够处理的动作类型。这些动作具体上怎么执行，对系统来说并不重要。这也正是面向对象程序设计中的“多态”观念。</p><h2>随着实践经验，归纳常见的架构模式</h2><p>我想表达的重点，是当你“涉世越深”之后，所接触的架构越多，就越能触类旁通。只需要瞧上几眼，就能明白系统所用的架构，自然就能够直接联想到其中可能存在的角色，以及角色间的关系。</p><p>像上述的插件程序手法，时常可以在许多允许“外挂”程序员的系统中看到。所以，有经验的阅读者，多半能够立即反应，知道像这样的系统的软件，应该是让每个插件程序，都写成DLL的函数库。</p><p>而每个插件的DLL的函数库中，都必须提供<code>winampGetMediaLibraryPlugin()</code>这个函数 。如果你熟悉设计模式，你更会知道这是简单工厂方法这个设计模式的运用。<br><code>winampGetMediaLibraryPlugin()</code> 所回传的<code>winampMediaLibraryPlugin</code>结构，正好就描述了每个AOL的Winamp插件的实现内容。</p><h3>善用名称可加速了解</h3><p>利用<code>gtags</code>这个工具，我们立即发现，这个插件它所定义的初始化，退出， <code>PluginMessageProc</code>这三个名称，都是函数名称。这暗示在方法重载的作用下，它们都是在某些时间点，会由AOL的Winamp核心本体调用的函数。</p><p>名称及命名惯例是很重要的。看到 “初始化” ，我们会知道它的作用多半是进行初始化的动作，而“退出”大概就是结束时处理函数，而PluginMessageProc多半就是各种讯息的处理常式（过程通常是程序的简写，所以<code>PluginMessagePro</code>c意指插件讯息程序）了。</p><p>“望文生义”很重要，我们看到函数的名称，就可以猜想到它所代表的作用，例如：当AOL的Winamp尝试着初始化一个插件时，它会调用这个结构中的初始化函数，以便让每个插件程序有机会初始化自己;当AOL的Winamp打算结束自己或结束某个插件的执行时，便会调用退出函数。当AOL的Winamp要和插件程序沟通时，它会发送各种不同的讯息至插件，而插件程序必须对此做出回应。</p><p>我们甚至不需要检查这几个函数的内容，就可以做出推测，而这样的假设，事实上也是正确的。</p><h2>阅读的乐趣：透过程序员认识作者</h2><p>即便每个人的写作模式多半受到他人的影响，程序通常还是会融合多种风格，而成为自己独有的特色，如果你知道作者程序设计的偏好，阅读他的程序就更得心应手。</p><p>阅读程序时，多半会采取由上而下，抽丝剥茧的方式。透过记录层层展开的树状结构，程序员可以逐步地建立起对系统的架构观，而且可以依照需要的粒度（粒度） ，决定展开的层次及精致程度。</p><p>建立架构观点的认识是最重要的事情。虽然这一系列的文章前提为“阅读他人的程序” ，但我们真正想做的工作，并不在于彻底地详读每一行程序员的细节，而是想要透过重点式的程序“摘读” ，达到对系统所需程度的了解。每个人在阅读程序员的动机不尽相同，需要了解的程度也就有深浅的分别。只有极为少数的情况下，你才会需要细读每一行程序。</p><h3>阅读程序是新时代程序员必备的重要技能</h3><p>本文至此已近尾声，回顾曾探讨的主题，我们首先研究了阅读程序的动机。尤其在开放源代码的风气如此之盛的情况下，妥善利用开放源代码所提供的资源，不仅能够更快学习到新的技术，同时在源代码版权合适时，还可以直接利用现成的程序，大幅地提高开发阶段的生产力。所以，阅读程序俨然成为了新时代程序员必备的重要技能之一。</p><p>接着，我们提到了阅读程序前的必要准备，包括了对编程语言，命名惯例的了解等等。在此之后，我们反覆提起了“由上而下”的阅读方向的重要性。<br>由上而下的阅读方式，是因为我们重视架构更胜于细节。从最外层的架构逐一向内探索，每往内探索一层，我们了解系统的粒度就增加了一个等级。当你识别出系统所用的架构时，便能够轻易了解在这个架构下会有的角色，以及它们之间的动态及静态的关系。如此一来，许多资讯便不言可喻，毋需额外花费力气，便能够快速理解。</p><h3>好的名称能够摘要性地指出实例的作用</h3><p>追踪源代码时，固然可以用本来的方式，利用编辑器开启所需的档案，然后利用编辑器提供的机制阅读，但是倘若能够善用工具，阅读程序员的效率及品质都能大大提升。在本文中，我们介绍了一些工具，或许你还可以在坊间找到其他更有用的工具。</p><p>我在这一系列的文章中，实际带着大家阅读，追踪了一个名为ml_pod的开放源代码项目。它是一个AOL的Winamp的iPod的外挂程序。在追踪的过程中，我们试着印证这一系列文中所提到的观念及方法。我们采用逐渐开展的树状结构来记录追踪的过程，并借以建立起对系统的概观认识。</p><p>就源代码的阅读来说，之前的讨论涉及了工具面及技巧面。但还有一些主题不在这两个范畴之内，例如，善用名称赋予你的提示。名称做为隐喻（隐喻）的作用很大，好的名称能够摘要性地点出实体的作用，例如我们看到<code>autoDetectIpod()</code>，自然而然能够想像它的作用在于自动（自动）侦测（检测）的iPod的存在。</p><p>我们在展开树状结构时，有时候需要预看一层，有时却不需要这么做，便可得到印证。程序员都会有惯用的名称以及组合名称的方法，倘若能够从名称上理解，便毋需钻进细节，可以省去相当多的时间。例如，当我们看到parseIpodDb （ ）时，便可以轻易了解它是剖析（解析）的iPod的资料库（ DB ）的，因此便不需要立即钻进parseIpodDb （ ）中查看底细。</p><p>尽管如此，能否理解程序命名的用意，和自身的经验以及是否了解原作者的文化背景，是息息相关的。</p><p>命名本身就是一种文化产物。不同的程序员文化，就会衍生出不同的命名文化。当你自己的经验丰富，看过及接触过的程序员也多时，对于名称的感受及联想的能力自然会有不同。</p><p>这种感受和联想的能力，究竟应该如何精进，很难具体描述。就我个人的经验，多观察不同命名体系的差异，并且尝试归纳彼此之间的异同，有助于更快地提升对名称的感受及联想力。</p><h3>转换立场，理解作者的思考方式</h3><p>除了工具及技巧之外， “想要阅读程序，得先试着阅读写这个程序的程序员的心。 ”这句话说来十分抽象，或许也令人难以理解。</p><p>当你在阅读一段程序员时，或许可以试着转换自己的立场，从旁观者的角度转换成为写作者的心态，揣摩原作者的心理及处境。当你试着设身处地站在他的立场，透过他的思考方式来阅读，追踪他所写下的程序员，将会感觉更加流畅。</p><p>许多软件项目，都不是由一个程序员所独力完成。因此，在这样的项目中，便有可能呈现多种不同的风格。</p><p>许多项目会由架构师决定主体的架构及运作，有既定实施的命名惯例，及程序设计需要遵守方针。在多人开发的模式下，越是好的软件项目，越看不出某程序片段究竟是由谁所写下的。</p><p>不过，有些开放源代码的项目，往往又整合了其他开放源代码的项目。有的时候，也很难求风格的统一，便会出现混杂的情况。好比之前提到的ml_pod项目，因为程序中混合了不同的来源，而呈现风格不一致的情况。</p><p>我在阅读非自己所写的程序时，会观察原作者写作的习惯，借以对应到脑中所记忆的多种写作模型。在阅读的过程中，读完几行程序，我会试着猜想原作者在写下这段程序时的心境。他写下这段程序的用意是什么？为什么他会采取这样的写法？顺着原作者的思考理路阅读，自己的思考才能更贴近对方写作当时的想法。</p><p>当你短暂化身为原作者时，才能更轻易的理解他所写下的程序。 如果你能知道原作者的背景，程序设计时的偏好，阅读他的程序，就更能得心应手了。</p><h3>从程序员着手认识作者独有的风格，进而见贤思齐</h3><p>我在阅读别人写下的程序时，我会试着猜想，原作者究竟是属于那一种“流派”呢？每个人都有自己独特的写作模式，即便每个人的写作模式多半受到他人的影响─ ─不论是书籍的作者，学习过程中的指导者，或一同参与项目的同侪，但每个程序员通常会融合多种风格，而成为自己独有的风格。</p><p>面向对象的基本教义派，总是会以他心中觉得最优雅的面向对象方式来撰写程序。而阅读惯用，善用设计模式的程序员所写下的程序时，不难推想出他会在各种常见的应用情境下，套用哪些模式。</p><p>有些时候，在阅读之初，你并不知道原作者的习性跟喜好，甚至你也不知道他的功力。但是，在阅读之后，你会慢慢地从一个程序员所写下的程序，开始认识他。</p><p>你或许会在阅读他人的程序时，发现令人拍案叫绝的技巧或设计。你也有可能在阅读的同时，发现原作者所留下的缺失或写作时的缺点，而暗自警惕于心。这也算是阅读他人程序时的一项乐趣。</p><p>当你从视阅读他人的程序为畏途，转变成为可以从中获取乐趣的时候，我想，你又进到了另一个境界。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;如何读懂代码&lt;/h1&gt;
&lt;p&gt;&lt;b&gt;&lt;a href=&quot;https://www.jianshu.com/p/1850db5d2891&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;——/转载自简书jianshu.com/——&lt;/a&gt;&lt;b&gt;&lt;/b&gt;&lt;/b&gt;&lt;
      
    
    </summary>
    
    
      <category term="experience" scheme="https://eliasliangyu.github.io/tags/experience/"/>
    
  </entry>
  
  <entry>
    <title>给博客添加评论功能</title>
    <link href="https://eliasliangyu.github.io/2019/06/16/%E7%BB%99%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E8%AF%84%E8%AE%BA%E5%8A%9F%E8%83%BD/"/>
    <id>https://eliasliangyu.github.io/2019/06/16/给博客添加评论功能/</id>
    <published>2019-06-15T16:42:35.000Z</published>
    <updated>2019-06-15T17:23:21.699Z</updated>
    
    <content type="html"><![CDATA[<h1 class="title clock">给博客添加评论功能</h1><p>Hexo的评论系统有很多，常见的有以下几个：</p><ul><li>多说：（凉了）</li><li>网易云跟帖：（也凉了）</li><li>畅言：<a href=" http://changyan.kuaizhan.com" target="_blank" rel="noopener"> http://changyan.kuaizhan.com</a> （需要备案，属实麻烦）</li><li>来必力LiveRe：<a href="https://livere.com " target="_blank" rel="noopener">https://livere.com </a>（韩国网站，使用邮箱注册）</li><li>Hypercomments：<a href="https://www.hypercomments.com " target="_blank" rel="noopener">https://www.hypercomments.com </a>（俄罗斯的，战斗名族）</li><li>valine : <a href="https://github.com/xCss/Valine" target="_blank" rel="noopener">https://github.com/xCss/Valine</a>（大家都用我不用说不过去）</li></ul><p>Hypercomments和LiveRe都是国外的，加载速度贼慢，甚至有被墙的可能。我刚最初使用的来必立LiveRe由于是韩国服务器不仅加载速度极慢，且评论需要认证个人社交账号，认证也比较缓慢，对于博客这类及时观看类的网站来说极其不合适，但也不是没有优点，评论框设计的倒是很美观，在翻看别人的博客搭建经验后找到了一个好用简单的评论系统，那就是 valine。</p><h2 id="ss-H2-1557303512937">开启Valine</h2><p>我使用的是archer主题，本身就已经集成了valine，因此正常情况下是按照官方文档走就可以了，几分钟就可以上线评论系统。</p><p><img src="//eliasliangyu.github.io/2019/06/16/给博客添加评论功能/Valine.png" alt="Valine-gitub"></p><p></p><h2 id="ss-H2-1557303512937">注册Leancloud</h2><p>评论系统都是放在Leancloud的服务器上的，个人部署的网页仅仅是展示，因此需要在官网注册一个账号。<a href="https://leancloud.cn" target="_blank" rel="noopener">Leancloud官网</a></p><p>注册完成提示需要创建一个应用，之后进入<b>应用->设置->应用key</b></p><p>获取你的App ID和App Key，如图：</p><p><img src="//eliasliangyu.github.io/2019/06/16/给博客添加评论功能/Key.jpg" alt="ID &amp; Key"></p><p></p><h2 id="ss-H2-1557303512937">更改配置文件</h2><p>打开主题配置文件_config.yml，找到valine，填入App ID和App Key。</p><pre class="prettyprint"><code class=" hljs vbnet">valine:  enable: <span class="hljs-literal">true</span>  appid:  your app id  appkey: your app <span class="hljs-keyword">key</span></code></pre><p>之后在<b>安全中心->Web安全域名</b>, 把你的项目域名加入；</p><h2 id="ss-H2-1557303512937">完成</h2><p>最后在Hexo根目录生成上传文件进行更新上传，完成后刷新页面即可看到评论框了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 class=&quot;title clock&quot;&gt;给博客添加评论功能&lt;/h1&gt;
&lt;p&gt;Hexo的评论系统有很多，常见的有以下几个：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;多说：（凉了）&lt;/li&gt;
&lt;li&gt;网易云跟帖：（也凉了）&lt;/li&gt;
&lt;li&gt;畅言：&lt;a href=&quot; http://chan
      
    
    </summary>
    
    
      <category term="Course" scheme="https://eliasliangyu.github.io/tags/Course/"/>
    
  </entry>
  
  <entry>
    <title>纪念iPhone XR刷机成砖</title>
    <link href="https://eliasliangyu.github.io/2019/06/14/%E7%BA%AA%E5%BF%B5iPhone-XR%E5%88%B7%E6%9C%BA%E6%88%90%E7%A0%96/"/>
    <id>https://eliasliangyu.github.io/2019/06/14/纪念iPhone-XR刷机成砖/</id>
    <published>2019-06-14T08:36:01.000Z</published>
    <updated>2019-06-16T07:23:11.059Z</updated>
    
    <content type="html"><![CDATA[<h1 class="title clock">纪念iPhone XR刷机成砖</h1><p>本人于之前将iPhone XR刷成ios13尝鲜，刚上手体验并未发现明显BUG，只是系统的中英文显示有些混乱，例如提醒事项并未汉化。</p><p>未曾想，这几日频繁出现个别应用无法打开，闪退，十分影响体验，遂决定降级至12.4。</p><p>本人自诩刷机经验丰富，并未进行备份，然未曾想刷机失败......只得恢复出厂模式，十分蛋疼......</p><p>吃一堑长一智，今后折腾之前必先备份保平安，以此博文为记。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 class=&quot;title clock&quot;&gt;纪念iPhone XR刷机成砖&lt;/h1&gt;
&lt;p&gt;本人于之前将iPhone XR刷成ios13尝鲜，刚上手体验并未发现明显BUG，只是系统的中英文显示有些混乱，例如提醒事项并未汉化。&lt;/p&gt;
&lt;p&gt;未曾想，这几日频繁出现个别应用无法打
      
    
    </summary>
    
    
      <category term="Apple ios" scheme="https://eliasliangyu.github.io/tags/Apple-ios/"/>
    
  </entry>
  
  <entry>
    <title>iOS 13 不只有深色模式，这 15+ 个新功能同样值得关注</title>
    <link href="https://eliasliangyu.github.io/2019/06/12/iOS-13-%E4%B8%8D%E5%8F%AA%E6%9C%89%E6%B7%B1%E8%89%B2%E6%A8%A1%E5%BC%8F%EF%BC%8C%E8%BF%99-15-%E4%B8%AA%E6%96%B0%E5%8A%9F%E8%83%BD%E5%90%8C%E6%A0%B7%E5%80%BC%E5%BE%97%E5%85%B3%E6%B3%A8/"/>
    <id>https://eliasliangyu.github.io/2019/06/12/iOS-13-不只有深色模式，这-15-个新功能同样值得关注/</id>
    <published>2019-06-12T08:36:01.000Z</published>
    <updated>2019-06-14T13:07:15.449Z</updated>
    
    <content type="html"><![CDATA[<body id="appBody">  <div id="root"><div id="app" data-server-rendered="true" data-v-32cbd803><div id="header" class="header" data-v-1e5e1c7e data-v-32cbd803><div class="fixed" data-v-1e5e1c7e><div class="headerBox" data-v-1e5e1c7e><div class="maxWidth" data-v-1e5e1c7e><div class="console" data-v-1e5e1c7e><a href="javascript:" class="menu" data-v-1e5e1c7e target="_blank" rel="noopener"><i class="icon i-menu" data-v-1e5e1c7e></i></a> <!----> <a href="javascript:" class="icon i-write" data-v-1e5e1c7e target="_blank" rel="noopener"></a> <form class="search-form" data-v-1e5e1c7e><i class="icon i-search" data-v-1e5e1c7e></i> </form> <!----> </div></div></div> <div class="subHeaderBox" data-v-1e5e1c7e><nav data-v-1e5e1c7e><form class="search-form" data-v-1e5e1c7e><i class="icon i-search" data-v-1e5e1c7e></i> </form> <ul data-v-1e5e1c7e>      </ul></nav></div></div> <div class="el-dialog__wrapper login-dialog" style="display:none;" data-v-1e5e1c7e><div role="dialog" aria-modal="true" aria-label="dialog" class="el-dialog" style="margin-top:15vh;width:550px;"><div class="el-dialog__header"><span class="el-dialog__title"></span><button type="button" aria-label="Close" class="el-dialog__headerbtn"><i class="el-dialog__close el-icon el-icon-close"></i></button></div><!----><!----></div></div> <!----></div> <div class="article-wrapper" data-v-ee74f828 data-v-32cbd803><div class="article-detail" data-v-ee74f828><article data-v-ee74f828> <!----> <h1 class="title clock" data-v-ee74f828>iOS 13 不只有深色模式，这 15+ 个新功能同样值得关注</h1> <div class="meta clock" data-v-ee74f828><div data-v-bc7948ac data-v-ee74f828><div style="margin-bottom: 25px;" data-v-bc7948ac> <span data-v-bc7948ac> <!----></span></div></div></div> <!----> <!----> <div class="content wangEditor-txt clock" data-v-ee74f828><html><head><meta name="generator" content="Hexo 3.8.0"></head><body><p><b><a href="https://sspai.com/post/55089" target="_blank" rel="noopener">——/转载自少数派sspai.com/——</a><b></b></b></p>    <p>按照惯例，苹果于北京时间 6 月 4 日凌晨的 WWDC 上发布了各个平台的新一代操作系统。相比去年专注于性能和稳定性的 iOS 12，今年的 iOS 13 有了大幅改动，带来了众多系统新特性，以及原生应用也得到了大幅改进。</p><h2 id="ss-H2-1559711456600">系统外观：姗姗来迟的深色模式</h2><p>自 iPhone X 发布以来，iOS 的深色模式就成了许多媒体每年 WWDC 预测的保留部分。在两年之后，苹果终于在 iOS 13 中将深色模式带到了 iPhone 上。</p><p>刷上 iOS 13 并在设置中开启深色模式后，我发现 iPhone 的锁屏页面、主屏幕、通知中心小组件页面以及原生应用的背景都会相应变为深色。此外，iOS 13 还提供了一组与 macOS Mojave 类似的壁纸，可以随深色模式的开关而变化。</p><figure tabindex="0" draggable="false" class="ss-img-wrapper custom-width" contenteditable="false"><img src="https://cdn.sspai.com/2019/06/05/e36e932d31bbc29f8719a6c2be3b011e.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt width="620" data-original="https://cdn.sspai.com/2019/06/05/e36e932d31bbc29f8719a6c2be3b011e.png"><figcaption class="ss-image-caption"></figcaption></figure><p>你可以在「设置-显示与亮度」中更改深色模式的设置。除了手动更改外，还可以选择根据日出与日落时间进行自动更改，或是自定义深色模式的时间段。</p><figure tabindex="0" draggable="false" class="ss-img-wrapper custom-width" contenteditable="false"><img src="https://cdn.sspai.com/2019/06/05/b27f9c73ee0fa614673edf33dd1fb5da.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt width="620" data-original="https://cdn.sspai.com/2019/06/05/b27f9c73ee0fa614673edf33dd1fb5da.png"><figcaption class="ss-image-caption"></figcaption></figure><p>除了在设置中开启 / 关闭深色模式，你也可以在控制中心长按亮度选项，借助弹出的选项来更加方便地切换系统外观。</p><figure tabindex="0" draggable="false" class="ss-img-wrapper custom-width" contenteditable="false"><img src="https://cdn.sspai.com/2019/06/05/53ba31313a1d0197881399279fcdffce.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt width="320" data-original="https://cdn.sspai.com/2019/06/05/53ba31313a1d0197881399279fcdffce.png"><figcaption class="ss-image-caption"></figcaption></figure><p>虽然苹果在系统界面和内置应用上下了不少功夫，但要实现全方位的一致外观，还离不开第三方 App 的支持。iOS 13 也为开发者提供了新的 API，使第三方应用也能更容易地适配深色模式。</p><p>除了深色模式，iOS 13 还对整体的设计语言进行了微调，向 iOS 12.3 中的钱包 app 的风格靠拢。例如，备忘录等应用新增了卡片式的视图；许多应用右上角也新增了「...」的选项按钮。</p><h2 id="ss-H2-1559711462136">摄影：除了拍，后期修图和管理也很重要</h2><p>苹果除了在 iPhone 上会通过硬件提升拍照的能力，还通过系统软件来提升拍照的体验，其中就包括了照片和相机应用的大幅优化。</p><h3 id="%E7%85%A7%E7%89%87%E5%85%A8%E6%96%B0%E7%9A%84%E6%B5%8F%E8%A7%88%E8%A7%86%E5%9B%BE%E5%A2%9E%E5%BC%BA%E7%9A%84%E7%BC%96%E8%BE%91%E5%8A%9F%E8%83%BD">照片：全新的浏览视图，增强的编辑功能</h3><p>照片应用在原本的「所有照片」之外，又新增了「年度」、「月」和「日」三个维度。不同维度间的过渡动画颇为流畅，并会自动播放实况照片和视频。相比「所有照片」平铺式的显示方式，新的显示模式进一步优化了浏览体验，帮助使用者更好地重温回忆。</p><figure tabindex="0" draggable="false" class="ss-img-wrapper custom-width" contenteditable="false"><img src="https://cdn.sspai.com/2019/06/05/c4aac8818d925e2619d0a5f872f259d8.gif?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt width="620" data-original="https://cdn.sspai.com/2019/06/05/c4aac8818d925e2619d0a5f872f259d8.gif"><figcaption class="ss-image-caption"></figcaption></figure><p>借助机器学习技术，照片应用会隐藏重复照片、屏幕截图、白板照片等干扰，并自动选取一张最佳照片进行放大展示。如果你正在按年份浏览，照片会尽量选取往年的今日照片进行展示；按照月份浏览时，照片还会根据照片展示的事件对图片进行分类，并显示事件的名称、位置等信息。</p><p>尤其值得一提的是，当应用检测到生日照片时，还会对照片中的人物进行识别，并与通讯录中的生日信息进行对照，从而在标题中显示寿星的名字。</p><p>在浏览照片拥有了更合理的方式之外，iOS 13 还增强了编辑图片和视频的功能。现在，包括自动增强在内，你可以通过滑动来调节色温、色调、对比度、噪点消除等 16 项参数，并可以实时预览效果。在添加滤镜时，应用同样允许你调节滤镜强度，并实时展示滤镜效果。</p><figure tabindex="0" draggable="false" class="ss-img-wrapper custom-width" contenteditable="false"><img src="https://cdn.sspai.com/2019/06/05/8c032a40196a81b875153b9a9e7a4fd1.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt width="620" data-original="https://cdn.sspai.com/2019/06/05/8c032a40196a81b875153b9a9e7a4fd1.png"><figcaption class="ss-image-caption"></figcaption></figure><p>此外，原本的旋转和裁剪页面还加入了矫正畸变的功能。</p><figure tabindex="0" draggable="false" class="ss-img-wrapper custom-width" contenteditable="false"><img src="https://cdn.sspai.com/2019/06/05/a23cf5693b4d1c867e799151112652b0.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt width="320" data-original="https://cdn.sspai.com/2019/06/05/a23cf5693b4d1c867e799151112652b0.png"><figcaption class="ss-image-caption"></figcaption></figure><p>值得一提的是，以上功能同样适用于视频编辑。总的来看，更新后的照片 app 已经足以满足一定的后期需求。美中不足的是，原生照片 app 缺失了局部编辑功能，因而依然无法替代泼辣修图等更为专业的修图应用。</p><h3 id="%E7%9B%B8%E6%9C%BA%E4%BA%BA%E5%83%8F%E5%85%89%E6%95%88%E6%9B%B4%E8%BF%9B%E4%B8%80%E6%AD%A5">相机：人像光效更进一步</h3><p>iOS 13 进一步提升了最新一代 iPhone 的人像模式效果。你可以调节不同光效的光源距离，从而实现更为理想的成像效果。</p><p>此外，人像模式还新增了名为「High-Key Mono」的光效模式，帮你拍摄出对比强烈、风格独特的人像。不过遗憾的是，本次相机的更新仅适用于 iPhone Xs、iPhone Xs Max 和 iPhone XR 机型。</p><figure tabindex="0" draggable="false" class="ss-img-wrapper custom-width" contenteditable="false"><img src="https://cdn.sspai.com/20190605112924.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt width="620" data-original="https://cdn.sspai.com/20190605112924.png"><figcaption class="ss-image-caption">样张来源：苹果官网</figcaption></figure><h2 id="ss-H2-1559711469143">原生应用：全新的设计，更多的功能</h2><p>这次 iOS 13 更新苹果继续在自家的应用上发力，为提醒事项、备忘录、地图、Safari、文件等应用都带来新设计和更加强大的功能。</p><h3 id="%E6%8F%90%E9%86%92%E4%BA%8B%E9%A1%B9%E6%9B%B4%E5%AE%9E%E7%94%A8%E7%9A%84%E7%AD%9B%E9%80%89%E5%8A%9F%E8%83%BD">提醒事项：更实用的筛选功能</h3><p>iOS 13 带来了全新的提醒事项 App。新设计的主页可以帮你更清楚地浏览任务。你还可以在创建列表时自定义使用的图标和颜色。</p><figure tabindex="0" draggable="false" class="ss-img-wrapper custom-width" contenteditable="false"><img src="https://cdn.sspai.com/2019/06/05/441526a0d270c679bdb52118e49875c3.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt width="620" data-original="https://cdn.sspai.com/2019/06/05/441526a0d270c679bdb52118e49875c3.png"><figcaption class="ss-image-caption"></figcaption></figure><p>此外，创建提醒也更为容易。除了会在键盘上方提供可能的触发方式，提醒事项还会通过自然语义识别功能进一步协助你创建提醒。当你在信息 App 中聊天时，Siri 将会根据对话内容，为你创建建议的任务；当你在提醒事项 App 中输入任务时，Siri 可以根据你的输入提供建议的提醒时间。</p><figure tabindex="0" draggable="false" class="ss-img-wrapper custom-width" contenteditable="false"><img src="https://cdn.sspai.com/2019/06/05/199cec47e8b4b85ac04961d8c4320464.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt width="620" data-original="https://cdn.sspai.com/2019/06/05/199cec47e8b4b85ac04961d8c4320464.png"><figcaption class="ss-image-caption"></figcaption></figure><p>创建提醒事项后，你还可以在详情中进一步编辑，如添加子事件，添加图片和链接作为附件等。</p><figure tabindex="0" draggable="false" class="ss-img-wrapper custom-width" contenteditable="false"><img src="https://cdn.sspai.com/2019/06/05/a4146b6c817d0eba30e549953648f992.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt width="320" data-original="https://cdn.sspai.com/2019/06/05/a4146b6c817d0eba30e549953648f992.jpeg"><figcaption class="ss-image-caption"></figcaption></figure><p>提醒事项还提供了新的触发方式。现在，除了设置在某一时间提醒、到达某一地点提醒，你还可以选择让提醒事项在你与选定的联系人发送短信时进行提醒。</p><h3 id="%E5%A4%87%E5%BF%98%E5%BD%95%E6%9F%A5%E7%9C%8B%E7%BC%96%E8%BE%91%E5%88%86%E4%BA%AB%E6%9B%B4%E4%B8%BA%E4%BE%BF%E6%8D%B7">备忘录：查看、编辑、分享更为便捷</h3><p>借助备忘录的列表页面新增的选项，备忘录可以将笔记以缩略图的形式呈现。相比之前的列表，新的视图更方便你查找带有图片和 Apple Pencil 标注的笔记。</p><figure tabindex="0" draggable="false" class="ss-img-wrapper custom-width" contenteditable="false"><img src="https://cdn.sspai.com/2019/06/05/4c484570b95cd920d846e305d4bd9546.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt width="320" data-original="https://cdn.sspai.com/2019/06/05/4c484570b95cd920d846e305d4bd9546.jpg"><figcaption class="ss-image-caption"></figcaption></figure><p>除此之外，备忘录的搜索功能也得到了提升。新增的搜索建议功能可以帮你按照不同的类别进行检索。当你输入关键词后，备忘录可以在包括笔记中添加的图片、扫描的文档等在内的位置查找关键词。</p><p>iOS  13 还为备忘录带来了多层级的文件夹系统。你可以新建一个文件夹，然后点击右上角的「...」将其移动到另一个文件夹之下。</p><p>不仅如此，备忘录还完善了其协作功能。你可以将笔记甚至整个文件夹共享给其他用户来进行协作，并可以控制协作者之间的权限。</p><h3 id="safari-%E6%B5%8F%E8%A7%88%E5%99%A8%E6%96%B0%E5%A2%9E%E4%B8%8B%E8%BD%BD%E7%AE%A1%E7%90%86%E5%99%A8">Safari 浏览器：新增下载管理器</h3><p>Safari 浏览器的空白标签页也在 iOS  13 中发生了变化。「经常访问的网页」变为了与「个人收藏」平级的项目。如果你并不需要，可以在设置中将其关闭。</p><p>尽管苹果只在 iPadOS 中提及了 Safari 浏览器的下载管理器，但实际上 iOS 13 也为 Safari 浏览器加入了这一功能。你可以在「设置-Safari浏览器-下载项」中更改下载文件的默认存放位置。值得一提的是，下载过程中并不需要保持 Safari 浏览器在前台。</p><p>除此之外，Safari 浏览器还允许你针对每个网页设定不同的显示和隐私选项。点击智能搜索栏左侧的图标，即可调整字体大小，并选择是否开启阅读模式。在「网页设置」中，你还可以进一步更改该网页的权限。在打开阅读模式后，你还可以进一步调整背景色和字体。</p><figure tabindex="0" draggable="false" class="ss-img-wrapper custom-width" contenteditable="false"><img src="https://cdn.sspai.com/2019/06/05/0f3d263b39fa807faa32613a28114629.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt width="620" data-original="https://cdn.sspai.com/2019/06/05/0f3d263b39fa807faa32613a28114629.png"><figcaption class="ss-image-caption"></figcaption></figure><p>值得一提的是，「请求桌面网站」选项同样出现在了 iOS 的 Safari 浏览器上。尽管 iPhone 的屏幕并不适合桌面网站，但这一功能可以绕开知乎等网站强制要求打开 App 才能进一步阅读的障碍。</p><p>除了上文所述之外，Safari 浏览器还有以下更新：</p><ul><li>上传图片时，可以更改图片尺寸；</li><li>当你搜索的关键词与已经打开的标签页相关时，建议栏可以让你直接跳转到该标签页；</li><li>Safari 浏览器会在你用弱密码注册账号时进行警告；</li><li>通过 iCloud 同步的 Safari 浏览器浏览记录和打开的标签页会被端到端加密。</li></ul><p>总的来说，本次更新为 Safari 浏览器带来了不少实用的功能，已经可以在一定程度上实现 iCab 等 <a href="https://sspai.com/post/45385" target="_blank" rel="noopener">进阶型浏览器</a> 的功能。</p><h3 id="%E6%96%87%E4%BB%B6%E6%9C%9D%E8%AE%BF%E8%BE%BE%E8%BF%88%E5%87%BA%E7%9A%84%E5%8F%88%E4%B8%80%E6%AD%A5">文件：朝访达迈出的又一步</h3><p>iOS 13 也进一步增强了文件 App 的功能。首先，你可以与其他用户共享 iCloud Drive 中的文件夹，从而进行远程协作。要为文件夹添加协作用户，只需选中文件夹后，在分享页面选择「Add People」即可。</p><figure tabindex="0" draggable="false" class="ss-img-wrapper custom-width" contenteditable="false"><img src="https://cdn.sspai.com/20190605114631.PNG?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt width="320" data-original="https://cdn.sspai.com/20190605114631.PNG"><figcaption class="ss-image-caption"></figcaption></figure><p>此外，苹果还更新了长按文件后弹出的操作页面，并新增了数个功能：</p><ul><li>压缩与解压缩。相应的操作不再需要绕道捷径；</li></ul><figure tabindex="0" draggable="false" class="ss-img-wrapper custom-width" contenteditable="false"><img src="https://cdn.sspai.com/20190605115913.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt width="620" data-original="https://cdn.sspai.com/20190605115913.jpeg"><figcaption class="ss-image-caption"></figcaption></figure><ul><li>快速查看。通过这个功能可以直接在文件应用中浏览文件，而无需跳转到第三方应用；</li></ul><figure tabindex="0" draggable="false" class="ss-img-wrapper custom-width" contenteditable="false"><img src="https://cdn.sspai.com/20190605120006.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt width="620" data-original="https://cdn.sspai.com/20190605120006.jpeg"><figcaption class="ss-image-caption"></figcaption></figure><p>不仅如此，iOS 13 还将备忘录中的扫描文档功能带到了文件 App 中。点击应用首页的「...」，选择「扫描文稿」即可。扫描后的文档可以直接分享，或是存储到文件 App 中。虽然这一原生功能并没有类似 Scanner Pro 等应用的 Workflow 选项，但扫描并保存文档的流程要比第三方 App 便捷不少。</p><figure tabindex="0" draggable="false" class="ss-img-wrapper custom-width" contenteditable="false"><img src="https://cdn.sspai.com/2019/06/05/fa1d40139fbdb9d8cfaa2bcd887e6348.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt width="320" data-original="https://cdn.sspai.com/2019/06/05/fa1d40139fbdb9d8cfaa2bcd887e6348.png"><figcaption class="ss-image-caption"></figcaption></figure><p>文件 App 的搜索还增加了关键词过滤的功能。你可以在输入文件的格式后，点击搜索建议的提示对搜索结果进行过滤，从而更快地找到所需的文件。</p><figure tabindex="0" draggable="false" class="ss-img-wrapper custom-width" contenteditable="false"><img src="https://cdn.sspai.com/2019/06/05/1f2eec4b8701529e1ea3b59550fe00fc.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt width="620" data-original="https://cdn.sspai.com/2019/06/05/1f2eec4b8701529e1ea3b59550fe00fc.png"><figcaption class="ss-image-caption"></figcaption></figure><p>值得一提的是，iOS 13 的文件 App 同样支持 iPadOS 中外接 USB 设备和连接服务器的功能。不过，目前苹果官网在售的相应配件只有一款 <a href="https://www.google.com/url?sa=t&amp;rct=j&amp;q=&amp;esrc=s&amp;source=web&amp;cd=1&amp;ved=2ahUKEwj7hJTvjNHiAhXCv54KHbpNBJAQFjAAegQIAxAB&amp;url=https%3A%2F%2Fwww.apple.com%2Fcn%2Fshop%2Fproduct%2FMD821FE%2FA&amp;usg=AOvVaw3fZJyQjb-7Ntv-9EH1M_qA" target="_blank" rel="noopener">闪电转 USB 相机转换器</a> ，其是否能支持连接 U 盘等设备还有待测试。</p><h3 id="%E5%9C%B0%E5%9B%BE%E6%9B%B4%E8%AF%A6%E5%B0%BD%E6%9B%B4%E6%99%BA%E8%83%BD">地图：更详尽，更智能</h3><p>得益于苹果的测绘工作，新版本的地图精细度有了极大的提升。</p><figure tabindex="0" draggable="false" class="ss-img-wrapper custom-width" contenteditable="false"><img src="https://cdn.sspai.com/2019/06/05/5a69fd932bb7c00b38c2c45b83bfeeab.gif?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt width="620" data-original="https://cdn.sspai.com/2019/06/05/5a69fd932bb7c00b38c2c45b83bfeeab.gif"><figcaption class="ss-image-caption">新旧地图精细度对比</figcaption></figure><p>除此之外，新版地图还加入了类似 Google Maps 的街景功能，从而方便用户获取更为准确的道路和地址等信息。苹果计划于未来两年内将这一改进应用至更多国家和地区。不过鉴于国内对测绘的管理，这一新特性能否应用至国内尚未可知。</p><figure tabindex="0" draggable="false" class="ss-img-wrapper custom-width" contenteditable="false"><img src="https://cdn.sspai.com/2019/06/05/7f3325db8463a605d60eca3cb940ae9d.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt width="320" data-original="https://cdn.sspai.com/2019/06/05/7f3325db8463a605d60eca3cb940ae9d.png"><figcaption class="ss-image-caption">街景功能</figcaption></figure><p>此外，地图还对收藏位置的显示进行了优化。现在，你可以对不同的地点进行分类，设定家庭、工作等多个预设地址，并将这些地点和预计到达时间分享出去。</p><figure tabindex="0" draggable="false" class="ss-img-wrapper custom-width" contenteditable="false"><img src="https://cdn.sspai.com/2019/06/05/517793b447958b54ebfc813f9ee2c7b6.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt width="620" data-original="https://cdn.sspai.com/2019/06/05/517793b447958b54ebfc813f9ee2c7b6.png"><figcaption class="ss-image-caption"></figcaption></figure><p>新版地图的导航功能也得到了提高。增强的 Siri 导航功能会用类似「下个红绿灯左转」的指示代替过去的「500米后左转」指令，并在导航快要结束前，引导你前往目的地的入口处。</p><p>除了上述的内容外，新版地图还可以实时更新你的航班信息，自动获取公交线路的时刻表，并额外为开发者提供了新的 API 接口 。</p><h3 id="%E5%81%A5%E5%BA%B7%E4%B8%AA%E6%80%A7%E5%8C%96%E4%B8%8E%E6%96%B0%E5%A2%9E%E5%8A%9F%E8%83%BD">健康：个性化与新增功能</h3><p>iOS 13 的健康应用也获得了全新的界面。通过机器学习，健康应用会将一天中最重要的健康信息呈现给你，并将其 与之前一周的情况进行对比，激励你更加重视个人健康。当然，你也可以选择将部分数据加入收藏，从而使其始终在应用顶部显示。你也可以在「搜索」标签页中查看所有健康数据。</p><figure tabindex="0" draggable="false" class="ss-img-wrapper custom-width" contenteditable="false"><img src="https://cdn.sspai.com/2019/06/05/0c195e5d6b3e9feff46f0ff8cd4e2a96.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt width="620" data-original="https://cdn.sspai.com/2019/06/05/0c195e5d6b3e9feff46f0ff8cd4e2a96.png"><figcaption class="ss-image-caption"></figcaption></figure><p>健康应用还同时新增了数个模块，包括：</p><ul><li>月经周期记录。在「搜索」标签页中点击「周期跟踪」，即可根据提示进行设置。应用会根据记录数据对排卵期等进行预测和提醒。</li><li>噪音检测。如果你有 Apple Watch 与 iPhone 配对，Apple Watch 将会对你的周围环境噪声进行监控，并为你提供其对听力的损害情况。此外，这一模块还会收集你使用的耳机音量，帮你判断是否需要将其调小。</li><li>口腔健康。你可以在「搜索」标签页的「Other Data-刷牙」中手动记录每日的刷牙时长，或是通过带有相应功能的牙刷自动记录。</li><li>教育模块，以短文的形式出现在主页面底部，为你普及健康知识。</li></ul><h3 id="%E6%9F%A5%E6%89%BE%E6%89%BE%E6%9C%8B%E5%8F%8B%E6%89%BE%E8%AE%BE%E5%A4%87%E5%90%88%E4%BA%8C%E4%B8%BA%E4%B8%80">查找：找朋友找设备合二为一</h3><p>iOS 13 将查找我的朋友和查找我的设备进行了合并，组成了新的「查找」应用。不过更引人关注的则是应用在查找离线设备上的进步。当其他人的 iPhone 检测到周围你的离线设备的蓝牙信号后，iOS 会自动将这一信息发送至云端，从而帮你定位丢失的设备。整个过程通过端到端加密来保证隐私安全，并且不会额外占用 iPhone 的数据流量。</p><figure tabindex="0" draggable="false" class="ss-img-wrapper custom-width" contenteditable="false"><img src="https://cdn.sspai.com/20190605120543.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt width="620" data-original="https://cdn.sspai.com/20190605120543.jpeg"><figcaption class="ss-image-caption"></figcaption></figure><h3 id="siri-%E5%92%8C%E6%8D%B7%E5%BE%84%E6%9B%B4%E8%87%AA%E7%84%B6%E7%9A%84%E5%A3%B0%E9%9F%B3%E8%87%AA%E5%8A%A8%E5%8C%96%E7%9A%84%E8%A7%A6%E5%8F%91%E6%9C%BA%E5%88%B6">Siri 和捷径：更自然的声音、自动化的触发机制</h3><p>相比此前 Siri 将多段语音拼合在一起的发音方式， iOS 13 采用了 TTS 模型，利用深度学习技术直接生成完整的句子，从而使 Siri 的声音听起来更为自然。此外，你还可以通过 Siri 来收听无线电广播、播客和有声书等内容。</p><p>iOS 13 也为捷径带来了新的重要功能：自动化。你可以设置通过时间、闹钟、体能训练、位置、打开应用、设备状态、NFC 贴纸等方式，自动触发相应的捷径。</p><p>这一新模块的加入，又进一步增加了捷径的玩法和实用性。例如，你可以令捷径在早晨闹钟结束后，自动为你播报今天的天气等信息。相比之下，Launch Center Pro 的订阅吸引力又小了不少。美中不足的是，目前捷径创建自动化时，其触发的动作无法设定为已经存在的捷径，制作起来略为繁琐。</p><figure tabindex="0" draggable="false" class="ss-img-wrapper custom-width" contenteditable="false"><img src="https://cdn.sspai.com/2019/06/05/7ee0cf871836f266ce82f222dee95e57.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt width="620" data-original="https://cdn.sspai.com/2019/06/05/7ee0cf871836f266ce82f222dee95e57.png"><figcaption class="ss-image-caption"></figcaption></figure><h2 id="ss-H2-1559711482189">系统功能：更好玩，更安全</h2><h3 id="%E6%8B%9F%E6%88%91%E8%A1%A8%E6%83%85memoji%E4%B8%8E%E5%8A%A8%E8%AF%9D%E8%A1%A8%E6%83%85animoji%E5%9C%A8%E7%BA%BF%E5%8C%96%E5%A6%86%E8%BF%98%E8%83%BD%E5%81%9A%E8%B4%B4%E7%BA%B8">拟我表情（Memoji）与动话表情（Animoji）：在线化妆，还能做贴纸</h3><p>iOS 13 为拟我表情带来了大量的可调节特性，如眼线、眼影、耳饰等。在发布会上，苹果还特意请来了 Youtube 网红 Patrick Starrr 和 Desi Perkins 进行了 <a href="https://www.youtube.com/watch?v=3x7_w9Oz8lQ" target="_blank" rel="noopener">演示</a> 。</p><figure tabindex="0" draggable="false" class="ss-img-wrapper custom-width" contenteditable="false"><img src="https://cdn.sspai.com/2019/06/05/715b8d5e6207a23986e1a7c0ed1ebd64.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt width="620" data-original="https://cdn.sspai.com/2019/06/05/715b8d5e6207a23986e1a7c0ed1ebd64.png"><figcaption class="ss-image-caption">新增的人物细节</figcaption></figure><p>动话表情也得到了更新，新增了老鼠、章鱼和奶牛三款形象。此外，制作完毕的 Memoji 和动画表情还会被自动转化为一套贴纸，可以和 Emoji 一起在表情键盘中使用，不再仅局限于信息 App 中。</p><figure tabindex="0" draggable="false" class="ss-img-wrapper custom-width" contenteditable="false"><img src="https://cdn.sspai.com/2019/06/05/a6b07dec1f3ef8110f6b8074d8475bc0.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt width="620" data-original="https://cdn.sspai.com/2019/06/05/a6b07dec1f3ef8110f6b8074d8475bc0.jpeg"><figcaption class="ss-image-caption">3 款新增动话表情</figcaption></figure><p>值得一提的是，尽管动话表情需要 iPhone X 及更新机型才能使用，Memoji 贴纸和动话表情贴纸可以在所有搭载 A9 及更新处理器的机型上使用。</p><h3 id="%E6%96%B0%E7%9A%84%E6%96%87%E6%9C%AC%E7%BC%96%E8%BE%91%E5%92%8C%E6%B5%8F%E8%A7%88%E6%89%8B%E5%8A%BF">新的文本编辑和浏览手势</h3><p>iOS 13 还带来了数个新的手势功能，更好地利用多点触控屏的优势来编辑和浏览文本：</p><ul><li>iOS 13 可以让你直接拖动并移动光标，不再需要长按；</li><li>长按并拖动光标可以选取文本，不再需要双击光标；</li><li>三重点击文本可以选取整句话，四重点击可以选取整段文字；</li><li>在浏览较长的文章或网页时，可以长按屏幕侧面的滚动条来快速跳转和预览；</li><li>在文件、邮件、信息等 App 中，可以通过双指轻点的方式进入文件选择模式，顺势滑动还可以快速多选文件；</li><li>在选中文本后，三指捏合即可复制文本，捏合两次即可剪切；张开三指可以粘贴文本。</li></ul><h3 id="%E5%B1%8F%E5%B9%95%E4%BD%BF%E7%94%A8%E6%97%B6%E9%97%B4one-more-minute">屏幕使用时间：One More Minute</h3><p>屏幕使用时间的功能也在本次 WWDC 上得到了优化，主要包括：</p><ul><li>在应用达到时间限额后，iOS 13 额外提供了「多一分钟」的选项，方便你快速保存或退出当前的工作；</li></ul><figure tabindex="0" draggable="false" class="ss-img-wrapper custom-width" contenteditable="false"><img src="https://cdn.sspai.com/2019/06/05/9e7c11d53c8da8ee087f956d4d26fdc2.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt width="320" data-original="https://cdn.sspai.com/2019/06/05/9e7c11d53c8da8ee087f956d4d26fdc2.png"><figcaption class="ss-image-caption"></figcaption></figure><ul><li>在「设置-屏幕使用时间-应用限额」中，你现在可以精确地选取所需的 App 来组成一组应用限额，不再只局限于同时选择某一类别的所有应用；</li></ul><figure tabindex="0" draggable="false" class="ss-img-wrapper custom-width" contenteditable="false"><img src="https://cdn.sspai.com/2019/06/05/5f28cd1e64ce61a4e8a749254a895bef.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt width="320" data-original="https://cdn.sspai.com/2019/06/05/5f28cd1e64ce61a4e8a749254a895bef.jpeg"><figcaption class="ss-image-caption">应用限额页面</figcaption></figure><ul><li>屏幕使用时间还新增了「通信限制」的选项，可以设置允许设备拨打电话、收发短信、使用 FaceTime 通话等功能的时间段和联系人；</li><li>屏幕使用时间的数据保存时间延长至 30 天，从而方便你具体对比本周和过去数周的数据。</li></ul><h3 id="%E9%9A%90%E7%A7%81%E4%B8%8E%E5%AE%89%E5%85%A8%E6%80%A7">隐私与安全性</h3><p>iOS 13 还进一步提升了对隐私的保护力度，主要包括了以下方面：</p><ul><li><p>当 App 请求获取位置信息时，新增了「只允许一次」的选项；</p></li><li><p>当 App 在后台使用你的位置信息时，iOS 13 会通过弹窗进行提醒，你可以据此选择是否更新对该应用的隐私权限设置；</p></li><li><p>在分享图片时，可以在「Options」中选择是否抹除照片的地理位置信息；</p></li></ul><figure tabindex="0" draggable="false" class="ss-img-wrapper custom-width" contenteditable="false"><img src="https://cdn.sspai.com/2019/06/05/b3312f283722a4a58d33a579b0bda071.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt width="620" data-original="https://cdn.sspai.com/2019/06/05/b3312f283722a4a58d33a579b0bda071.jpeg"><figcaption class="ss-image-caption"></figcaption></figure><ul><li>改进后的 API 使应用更难通过 Wi-Fi 和蓝牙信息获取当前位置。此外，iOS 13 还提升了 Safari 浏览器阻止网页追踪的能力。</li></ul><p>除此之外，苹果还在 iOS 13 中推出了「通过 Apple 登陆」（Sign In with Apple）的选项。相比常见的通过 Facebook、Google 登陆，通过 Apple 登陆不会向网页泄露除名称和邮箱地址外的任何个人信息。</p><p>如果你希望更进一步，还可以在登录时隐藏真实邮箱地址，而以苹果创建的随机邮箱地址进行替代。你甚至还可以为不同应用设置使用不同的匿名邮箱。通过 Apple 登陆不需要设置密码，借助面容 ID 或 触控 ID 即可登陆，还可以通过双重验证来进一步提高安全性。</p><h3 id="airpods-%E5%92%8C-homepod">AirPods 和 HomePod</h3><p>iOS 13 也为 AirPods 和 HomePod 带来了新功能。现在，当使用了 SiriKit 的应用接收到消息后，AirPods 会自动为你朗读内容，并可以让你即时通过 Siri 来回复。此外，当你使用 AirPods 听音乐时，还可以通过轻触设备的方式与另一名 AirPods 使用者共享当前歌曲。这一功能同样适用于所有使用了 SiriKit 的第三方 App。</p><figure tabindex="0" draggable="false" class="ss-img-wrapper custom-width" contenteditable="false"><img src="https://cdn.sspai.com/2019/06/05/03de73d70b55ad3dce21f9037679b0cb.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt width="620" data-original="https://cdn.sspai.com/2019/06/05/03de73d70b55ad3dce21f9037679b0cb.png"><figcaption class="ss-image-caption">来源：WWDC 2019</figcaption></figure><p>与此同时，HomePod 带来了对多用户的支持。通过对不同家庭成员声音进行分析，HomePod 可以对联系人、短信、通话等指令做出更为个性化的回答。</p><figure tabindex="0" draggable="false" class="ss-img-wrapper custom-width" contenteditable="false"><img src="https://cdn.sspai.com/2019/06/05/0cd56e6ff049f50e08387b0ae4e880bf.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt width="320" data-original="https://cdn.sspai.com/2019/06/05/0cd56e6ff049f50e08387b0ae4e880bf.jpeg"><figcaption class="ss-image-caption">家庭 App</figcaption></figure><h2 id="ss-H2-1559711489675">其他</h2><p>除了上文的主要更新外，iOS 13 还带来了以下变化：</p><ul><li>在没有 3D Touch 的手机上使用 Haptic Touch 可以获得 Context Menu 的效果；</li><li>新增 Image Capture API，允许第三方 App 直接打开外接设备中的图片，无需再经过照片 App；</li><li>App Store 界面调整，新增订阅服务 Arcade 界面，应用更新移动至个人页面；</li></ul><figure tabindex="0" draggable="false" class="ss-img-wrapper custom-width" contenteditable="false"><img src="https://cdn.sspai.com/2019/06/05/9b78b2bfbbe4750282e04308d2a43d40.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt width="620" data-original="https://cdn.sspai.com/2019/06/05/9b78b2bfbbe4750282e04308d2a43d40.png"><figcaption class="ss-image-caption"></figcaption></figure><ul><li>音量调节页面更新，不再占用过多屏幕面积，并可以在屏幕上直接滑动调节；</li></ul><figure tabindex="0" draggable="false" class="ss-img-wrapper custom-width" contenteditable="false"><img src="https://cdn.sspai.com/2019/06/05/304d77dbcbb56f2adaa2c69acd18a12b.gif?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt width="320" data-original="https://cdn.sspai.com/2019/06/05/304d77dbcbb56f2adaa2c69acd18a12b.gif"><figcaption class="ss-image-caption"></figcaption></figure><ul><li>图书 App 新增了每日阅读目标功能，鼓励你坚持每日读书；</li></ul><figure tabindex="0" draggable="false" class="ss-img-wrapper custom-width" contenteditable="false"><img src="https://cdn.sspai.com/2019/06/05/6424a62d813b25475164fd97ab2db1aa.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt width="320" data-original="https://cdn.sspai.com/2019/06/05/6424a62d813b25475164fd97ab2db1aa.jpeg"><figcaption class="ss-image-caption"></figcaption></figure><ul><li>音乐 App 采用了新的播放页面，并新增了歌词滚动显示功能；</li></ul><figure tabindex="0" draggable="false" class="ss-img-wrapper custom-width" contenteditable="false"><img src="https://cdn.sspai.com/2019/06/05/a399cd1520d79d8b9c44b9cddc311e07.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt width="320" data-original="https://cdn.sspai.com/2019/06/05/a399cd1520d79d8b9c44b9cddc311e07.png"><figcaption class="ss-image-caption"></figcaption></figure><ul><li>邮件 App 可以屏蔽特定邮箱的来信，并新增了自动补全邮箱地址、改良的工具栏等功能；</li><li>家庭 App 提升了对 HomeKit 配件的保护，自动化可以触发捷径。此外，苹果还推出了新的 HomeKit 监控，符合这一标准的配件将可以在不占用 iCloud 空间的情况下，通过 iCloud 发送录像内容；</li><li>你可以在「设置-电话」中开启「静音未知来电」选项，减少骚扰电话的干扰；</li><li>优化了充电方式，通过学习用户的充电习惯，并暂缓充电至 80% 以上，来减缓电池的老化；</li><li>支持游戏时使用 PlayStation 4 和 Xbox One S 的手柄；</li><li>在控制中心长按 Wi-Fi 和蓝牙图标后，可以直接选择要连接的网络 / 设备；</li></ul><figure tabindex="0" draggable="false" class="ss-img-wrapper custom-width" contenteditable="false"><img src="https://cdn.sspai.com/2019/06/05/c07e27a5cc9c17a907f366928b36eff8.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt width="620" data-original="https://cdn.sspai.com/2019/06/05/c07e27a5cc9c17a907f366928b36eff8.jpeg"><figcaption class="ss-image-caption"></figcaption></figure><ul><li>可以在「设置-信息-共享姓名和照片」中设置是否在开始新对话时，发送自己的头像和姓名给对方；</li><li>可以用 Memoji 为通讯录中的联系人添加头像；</li><li>分享页界面得到了更新，并会根据使用习惯，建议可能的分享对象；</li></ul><figure tabindex="0" draggable="false" class="ss-img-wrapper custom-width" contenteditable="false"><img src="https://cdn.sspai.com/2019/06/05/2a64b8e78796656555b1f2abbea23426.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt width="620" data-original="https://cdn.sspai.com/2019/06/05/2a64b8e78796656555b1f2abbea23426.png"><figcaption class="ss-image-caption"></figcaption></figure><ul><li>可以在 App Store 中下载字体使用，并在设置中进行管理；</li><li>截图标注页面更新，加入了直尺工具。编辑后的图片可以直接保存至文件 App；</li></ul><figure tabindex="0" draggable="false" class="ss-img-wrapper custom-width" contenteditable="false"><img src="https://cdn.sspai.com/2019/06/05/336939de533feafdcbb566da8ca68982.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt width="320" data-original="https://cdn.sspai.com/2019/06/05/336939de533feafdcbb566da8ca68982.jpeg"><figcaption class="ss-image-caption"></figcaption></figure><ul><li>系统键盘加入了滑动输入的功能，可以通过指尖在键盘区域不间断地滑动来实现更流畅地输入，并减少误触的情况；</li><li>表情成为了系统键盘的一枚独立的按键。在多个语言之间切换时，将不会再收到表情键盘的干扰；</li><li>iPhone Xs、iPhone Xs Max 和 iPhone XR 增加对杜比全景声效的支持；</li><li>解除了蜂窝网络环境下不能下载超过 200MB 的应用的限制；</li></ul><figure tabindex="0" draggable="false" class="ss-img-wrapper custom-width" contenteditable="false"><img src="https://cdn.sspai.com/2019/06/05/91a7de16e3818f8cc555e7f9857a342f.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt width="620" data-original="https://cdn.sspai.com/2019/06/05/91a7de16e3818f8cc555e7f9857a342f.png"><figcaption class="ss-image-caption"></figcaption></figure><p>相比往年，苹果今年并没有放出 iOS 13 的 Developer Beta 版描述文件，并在相关界面特别提醒普通用户应等待 Public Beta。在我的体验中，iOS 13 的测试版也存在发热、卡顿等问题。如果你希望提前体验 iOS 13，不妨等待 7 月推出的 Public Beta 测试版。</p></body></html></div></article></div></div></div></div></body>]]></content>
    
    <summary type="html">
    
      
      
        
&lt;body id=&quot;appBody&quot;&gt;
  &lt;div id=&quot;root&quot;&gt;&lt;div id=&quot;app&quot; data-server-rendered=&quot;true&quot; data-v-32cbd803&gt;&lt;div id=&quot;header&quot; class=&quot;header&quot; data-v-1e5e1
      
    
    </summary>
    
    
      <category term="Apple ios" scheme="https://eliasliangyu.github.io/tags/Apple-ios/"/>
    
  </entry>
  
  <entry>
    <title>如何搭建属于自己的个人博客</title>
    <link href="https://eliasliangyu.github.io/2019/06/12/%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E5%B1%9E%E4%BA%8E%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>https://eliasliangyu.github.io/2019/06/12/如何搭建属于自己的个人博客/</id>
    <published>2019-06-12T04:36:01.000Z</published>
    <updated>2019-06-14T13:06:14.373Z</updated>
    
    <content type="html"><![CDATA[<body id="appBody">  <div id="root"><div id="app" data-server-rendered="true" data-v-32cbd803><div id="header" class="header" data-v-1e5e1c7e data-v-32cbd803><div class="fixed" data-v-1e5e1c7e><div class="headerBox" data-v-1e5e1c7e><div class="maxWidth" data-v-1e5e1c7e> <div class="console" data-v-1e5e1c7e><a href="javascript:" class="menu" data-v-1e5e1c7e target="_blank" rel="noopener"><i class="icon i-menu" data-v-1e5e1c7e></i></a> <!----> <a href="javascript:" class="icon i-write" data-v-1e5e1c7e target="_blank" rel="noopener"></a> <form class="search-form" data-v-1e5e1c7e><i class="icon i-search" data-v-1e5e1c7e></i> </form> <!----> </div></div></div> <div class="subHeaderBox" data-v-1e5e1c7e><nav data-v-1e5e1c7e><form class="search-form" data-v-1e5e1c7e><i class="icon i-search" data-v-1e5e1c7e></i> </form> </nav></div></div> <div class="el-dialog__wrapper login-dialog" style="display:none;" data-v-1e5e1c7e><div role="dialog" aria-modal="true" aria-label="dialog" class="el-dialog" style="margin-top:15vh;width:550px;"><div class="el-dialog__header"><span class="el-dialog__title"></span><button type="button" aria-label="Close" class="el-dialog__headerbtn"><i class="el-dialog__close el-icon el-icon-close"></i></button></div><!----><!----></div></div> <!----></div> <div class="article-wrapper" data-v-ee74f828 data-v-32cbd803><div class="article-detail" data-v-ee74f828><article data-v-ee74f828> <!----> <h1 class="title clock" data-v-ee74f828>使用GitHub Pages 搭建属于自己的博客网站</h1> <div class="meta clock" data-v-ee74f828><div data-v-bc7948ac data-v-ee74f828><div style="margin-bottom: 25px;" data-v-bc7948ac> <span data-v-bc7948ac> <!----></span></div></div> <!----> <!----> <div class="content wangEditor-txt clock" data-v-ee74f828><html><head><meta name="generator" content="Hexo 3.8.0"></head><body><p><b><a href="https://sspai.com/post/54608" target="_blank" rel="noopener">——/转载自少数派sspai.com/——</a><b></b></b></p><p>互联网从诞生发展至今日，每天有无数的人在上面留下自己的足迹，他们用它记录生活、抒发情感、分享见解，这一切都离不开一个可以承载文字的平台，一个独立的、由自己掌控的平台，而 GitHub Pages 就是这么一个平台。</p><p>在这个平台里你可以使用自己的个性域名；可以在海量的主题里挑选最适合你的那一款，如果你技术极客，也可以根据自己的喜好，设计属于自己的个性化页面；你既可以在线创建和发布网站，也可以在本地通过客户端工具或者命令行进行网站和内容的管理。</p><p>你完全可以通过 GitHub Pages 展示和输出自身价值，甚至可以把它打造成属于自己的互联网「身份证」。</p><h2 id="ss-H2-1557303512937">为什么使用 GitHub Pages</h2><p>如果你把他作为一个轻量级的个人博客服务，GitHub Pages 相较 WordPress 之类的建站服务有什么优势呢？</p><ul><li>首先他是完全免费的，相较其他的同类产品，他能替你省下一笔服务费，节约下的钱可以让你买一些其他的会员服务；</li><li>无须自己购买云服务进行搭建，只需按步骤一步步操作即可，即使你不懂他的技术细节；</li><li>支持的功能多，玩法丰富，你可以绑定你的域名、使用免费的 HTTPS、自己 DIY 网站的主题、使用他人开发好的插件等等；</li><li>当完成搭建后，你只需要专注于文章创作就可以了，其他诸如环境搭建、系统维护、文件存储的事情一概不用操心，都由 GitHub 处理</li></ul><p>当然了，作为一款免费的服务，我们也是要遵守 GitHub 官方使用建议和限制，在使用的时候项目和网站的大小不要超过 1GB，也不要过于频繁的更新网站的内容（每小时不超过 10 个版本），每个月的也要注意带宽使用上限为 100GB。</p><p>综合来看，GitHub Pages 依旧可以说是中小型博客或项目主页的最佳选项之一。</p><h2 id="ss-H2-1557303515619">如何使用 GitHub pages</h2><p>介绍了这么多，下面就具体来谈谈如何使用它。</p><h3 id="ss-H3-1557303562873">基本页面的生成</h3><p>首先你需要注册一个 GitHub 账号，并在个人主界面里选择创建一个新的 Repository 。</p><figure tabindex="0" draggable="false" class="ss-img-wrapper custom-width" contenteditable="false"><img src="https://cdn.sspai.com/20190506142539.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt width="620" data-original="https://cdn.sspai.com/20190506142539.jpg"><figcaption class="ss-image-caption"></figcaption></figure><p>进入页面后，在 Repository name 的位置填写域名，格式是 <code>username.GitHub.io</code>。</p><p><img src="https://www.markeditor.com/file/get/08738ebb06454701a76bda6bdaa1b8c3.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="图片" data-original="https://www.markeditor.com/file/get/08738ebb06454701a76bda6bdaa1b8c3.jpg"></p><p>创建成功之后，点击右上角的 Settings</p><figure tabindex="0" draggable="false" class="ss-img-wrapper custom-width" contenteditable="false"><img src="https://cdn.sspai.com/20190506142601.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt width="620" data-original="https://cdn.sspai.com/20190506142601.jpg"><figcaption class="ss-image-caption"></figcaption></figure><p>找到 GitHub Pages 选项，选择一个 GitHub 官方提供的主题</p><figure tabindex="0" draggable="false" class="ss-img-wrapper custom-width" contenteditable="false"><img src="https://cdn.sspai.com/20190506142607.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt width="620" data-original="https://cdn.sspai.com/20190506142607.jpg"><figcaption class="ss-image-caption"></figcaption></figure><p>这里我们就随意选择一个主题 Cayman，来看看他的效果是什么样的</p><figure tabindex="0" draggable="false" class="ss-img-wrapper custom-width" contenteditable="false"><img src="https://cdn.sspai.com/20190506143205.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt width="620" data-original="https://cdn.sspai.com/20190506143205.png"><figcaption class="ss-image-caption"></figcaption></figure><p>选择完毕之后 GitHub Pages 就会自动帮你生成好网站，在他跳转的界面点击 Commit changes 按钮，网站就可以访问了。</p><figure tabindex="0" draggable="false" class="ss-img-wrapper custom-width" contenteditable="false"><img src="https://cdn.sspai.com/20190506143333.gif?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt width="620" data-original="https://cdn.sspai.com/20190506143333.gif"><figcaption class="ss-image-caption"></figcaption></figure><p>在浏览器里输入你的项目名称，比如 <a href="https://brick713.GitHub.io/" target="_blank" rel="noopener">brick713.GitHub.io</a>，就可以看到，你刚刚选择的主题的个人网站的页面了。</p><figure tabindex="0" draggable="false" class="ss-img-wrapper custom-width" contenteditable="false"><img src="https://cdn.sspai.com/20190506143441.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt width="620" data-original="https://cdn.sspai.com/20190506143441.png"><figcaption class="ss-image-caption"></figcaption></figure><p>到这里如果你只是想做一个例如可以随时在互联网上访问的简历，那么你只需要  GitHub Pages 项目的主页修改你 <a href="http://index.md" target="_blank" rel="noopener">index.md</a> 文件就可以了，比如我给出的这个模板。</p><figure tabindex="0" draggable="false" class="ss-img-wrapper custom-width" contenteditable="false"><img src="https://cdn.sspai.com/20190506143459.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt width="620" data-original="https://cdn.sspai.com/20190506143459.png"><figcaption class="ss-image-caption"></figcaption></figure><p>修改完后，点击上图中左下角的 Commit Changes，然后访问你的自定义域名你就可以看到如下的样式了。</p><figure tabindex="0" draggable="false" class="ss-img-wrapper custom-width" contenteditable="false"><img src="https://cdn.sspai.com/20190506143603.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt width="620" data-original="https://cdn.sspai.com/20190506143603.png"><figcaption class="ss-image-caption"></figcaption></figure><p>如果你想做一个功能更丰富的博客，那我们继续往下走。</p><h3 id="ss-H3-1557303571087">配置自定义域名并免费使用 HTTPS</h3><p>在 2018 年 5 月 1 日之后，GitHub Pages 已经开始提供免费为自定义域名开启 HTTPS 的功能，并且大大简化了操作的流程，现在用户已经不再需要自己提供证书，只需要将自己的域名使用 CNAME 的方式指向自己的 GitHub Pages 域名即可。</p><p>首先在你的 DNS 解析里添加一条解析记录，例如我选择添加子域名 <code>blog.moyu.life</code> 通过 CNAME 的方式指向我刚刚自定义的 GitHub Pages 域名 <code>brick713.GitHub.io</code>。添加完成后等待 DNS 解析的生效（DNS 的解析记录生效到全球可能需要几分钟时间）。</p><figure tabindex="0" draggable="false" class="ss-img-wrapper custom-width" contenteditable="false"><img src="https://cdn.sspai.com/20190508161054.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt width="620" data-original="https://cdn.sspai.com/20190508161054.png"><figcaption class="ss-image-caption"></figcaption></figure><p>之后重新回到最开始进入过的 Settings 界面，找到 GitHub Pages 的设置，填写我们刚刚建立的子域名，以我自己的 blog.moyu.life 举例，点击保存。</p><figure tabindex="0" draggable="false" class="ss-img-wrapper custom-width" contenteditable="false"><img src="https://cdn.sspai.com/20190508161109.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt width="620" data-original="https://cdn.sspai.com/20190508161109.png"><figcaption class="ss-image-caption"></figcaption></figure><p>保存后 GitHub 需要一定的时间生成证书并确认域名的解析是否正常，我们只需要耐心的等待即可，成功后显示结果如下</p><figure tabindex="0" draggable="false" class="ss-img-wrapper custom-width" contenteditable="false"><img src="https://cdn.sspai.com/20190508161122.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt width="620" data-original="https://cdn.sspai.com/20190508161122.png"><figcaption class="ss-image-caption"></figcaption></figure><p>现在我们再访问 blog.moyu.life 就会发现，我们的自定义域名和 HTTPS 都生效了！可以看到证书是由著名的机构 Let&#39;s Encrypt 提供的。</p><figure tabindex="0" draggable="false" class="ss-img-wrapper custom-width" contenteditable="false"><img src="https://cdn.sspai.com/20190508161133.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt width="620" data-original="https://cdn.sspai.com/20190508161133.png"><figcaption class="ss-image-caption"></figcaption></figure><h3 id="ss-H3-1557303530640">网站的同步</h3><p>现在我们已经有了一个基本功能健全的网站了，接下来我们需要试着对博客的内容进行管理，并且给博客添加一些更个性化的设置，官方提供两种方式：</p><ul><li>命令行方式（Mac 和 Windows 确保拥有 Git 环境）</li><li>桌面客户端形式（需要安装官方提供的客户端）</li></ul><p>如果你没有任何 Git 的基础，也不想进行一些繁琐的配置，那么我推荐你使用桌面客户端的形式进行管理，如果你有一定的技术基础，那么 Git 的方式则更适合你。这里我两种方法都介绍一下。</p><p>首先在命令行中切换到你自定义的路径下，然后 Clone 下来你的项目（操作需要在 Mac 的 Terminal 中完成，Windows 系统可以使用 Git-bash。）这里注意这里的 path 和 username 需要根据你个人情况进行替换。</p><pre><code><div>cd ~/Path git clone https://GitHub.com/username/username.GitHub.io</div></code></pre><figure tabindex="0" draggable="false" class="ss-img-wrapper custom-width" contenteditable="false"><img src="https://cdn.sspai.com/2019/05/09/0ac45ab544aaed52fa54338b9e84f43e.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt width="620" data-original="https://cdn.sspai.com/2019/05/09/0ac45ab544aaed52fa54338b9e84f43e.png"><figcaption class="ss-image-caption"></figcaption></figure><p>接着进入你的项目的文件中，并创作一个文章。</p><pre><code><div>cd username.GitHub.ioecho &#34;Hello World 我爱这个世界&#34; &gt; index.md</div></code></pre><p>然后按照 Git 提交内容的流程，将我们的新创作的文章上传。</p><pre><code><div>git add --allgit commit -m &#34;Firs Push&#34;git push -u origin master</div></code></pre><p>这里可能会碰到下面的情况：</p><figure tabindex="0" draggable="false" class="ss-img-wrapper custom-width" contenteditable="false"><img src="https://cdn.sspai.com/2019/05/09/e2389fe0c465bab0fdc263e96574238f.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt width="620" data-original="https://cdn.sspai.com/2019/05/09/e2389fe0c465bab0fdc263e96574238f.jpg"><figcaption class="ss-image-caption"></figcaption></figure><p>按照他的提示我们把注册 GitHub 的邮箱和用户名依次输入即可：</p><pre><code><div>git config user.email &#34;你的邮箱&#34;git config user.name &#34;你的用户名&#34;</div></code></pre><p>之后他可能会让你输入你的 GitHub 账号和密码，不用担心，正常输入即可。当我们看到这样的提升就证明提交成功了。</p><figure tabindex="0" draggable="false" class="ss-img-wrapper custom-width" contenteditable="false"><img src="https://cdn.sspai.com/2019/05/09/f707deafab9ed1231d20af9ed4185af2.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt width="620" data-original="https://cdn.sspai.com/2019/05/09/f707deafab9ed1231d20af9ed4185af2.jpg"><figcaption class="ss-image-caption"></figcaption></figure><p>可以去我们的网站主页看看是不是起了变化。</p><figure tabindex="0" draggable="false" class="ss-img-wrapper custom-width" contenteditable="false"><img src="https://cdn.sspai.com/20190508161225.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt width="620" data-original="https://cdn.sspai.com/20190508161225.png"><figcaption class="ss-image-caption"></figcaption></figure><p>如果你是使用<a href="https://desktop.GitHub.com/" target="_blank" rel="noopener">GitHub 桌面客户端</a> 那么就更简单了，下载安装了客户端之后，按照客户端的提示正常登陆你的 GitHub 账号。然后 Clone 下来你的 GitHub Pages 项目。</p><figure tabindex="0" draggable="false" class="ss-img-wrapper custom-width" contenteditable="false"><img src="https://cdn.sspai.com/20190508161237.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt width="620" data-original="https://cdn.sspai.com/20190508161237.png"><figcaption class="ss-image-caption"></figcaption></figure><p>等待 Clone 完成后，界面上会显示几种管理修改你的项目的方式。</p><figure tabindex="0" draggable="false" class="ss-img-wrapper custom-width" contenteditable="false"><img src="https://cdn.sspai.com/20190508161341.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt width="620" data-original="https://cdn.sspai.com/20190508161341.png"><figcaption class="ss-image-caption"></figcaption></figure><p>这里我选择使用 Sublime Text 进行管理，把开始的 <a href="http://index.md" target="_blank" rel="noopener">index.md</a> 里的内容改为 <code>Hello World 我也爱这个世界</code> 保存，然后在客户端上我们能看到文件的变化，我们先点击左下角的 Commit to master，再点击 Fetch origin 就可以将内容上传。</p><figure tabindex="0" draggable="false" class="ss-img-wrapper custom-width" contenteditable="false"><img src="https://cdn.sspai.com/20190508161353.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt width="620" data-original="https://cdn.sspai.com/20190508161353.png"><figcaption class="ss-image-caption"></figcaption></figure><p>然后你发现你的主页也发生了相应改变了。到这里你基本上就掌握了网站管理的基本流程和文章发布的基本流程，下面我们要开始来学会使用静态模板系统来管理博客了。</p><h3 id="ss-H3-1557303536767">GitHub Pages 的生成工具</h3><p>经历了上面的步骤，现在你的已经有了一个简单的页面了，可是他还远远未满足我们的需求，我们需要利用静态模板系统来让生产接管你博客的文章的生成，让你把更多的经历投入在创作里。下面就 GitHub 官方推荐的 Jekyll 为例子来展开讲讲。</p><p>因为 Jekyll 是基于 Ruby 的静态网页生成系统，因此我们首先得安装 Ruby 环境，在 Mac 下我们可以使用的 Homebrew 来进行安装。如果是其他操作系统，可以去参考 <a href="https://www.ruby-lang.org/en/documentation/installation/" target="_blank" rel="noopener">Ruby 官方安装文档</a>进行安装。</p><pre><code><div>brew install ruby</div></code></pre><p>等 Ruby 安装完毕后再执行以下命令完成 Jekyll 的安装。</p><pre><code><div>gem install jekyll bundler</div></code></pre><p>然后进入你 Clone 下来的 GitHub Pages 项目的路径，例如：</p><figure tabindex="0" draggable="false" class="ss-img-wrapper custom-width" contenteditable="false"><img src="https://cdn.sspai.com/20190508161408.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt width="620" data-original="https://cdn.sspai.com/20190508161408.png"><figcaption class="ss-image-caption"></figcaption></figure><p>执行以下命令：</p><pre><code><div>jekyll new . --force</div></code></pre><p>完成后，Jekyll 会在你指定的目录下生成好所有文件，你可以使用 <code>bundle exec jekyll serve</code> 命令，然后就可以通过访问 <code>127.0.0.1:4000</code> 查看初始界面的样子了。</p><figure tabindex="0" draggable="false" class="ss-img-wrapper custom-width" contenteditable="false"><img src="https://cdn.sspai.com/20190508161423.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt width="620" data-original="https://cdn.sspai.com/20190508161423.png"><figcaption class="ss-image-caption"></figcaption></figure><p>默认的界面看起来非常的简陋也很丑，但是没关系，你可以在这些网站里根据自己的喜好找到一些美观的主题<a href="http://jekyllthemes.org/" target="_blank" rel="noopener">http://jekyllthemes.org/</a>、<a href="https://jekyllthemes.io/" target="_blank" rel="noopener">https://jekyllthemes.io/</a>、<a href="http://themes.jekyllrc.org/" target="_blank" rel="noopener">http://themes.jekyllrc.org/</a>。</p><p>安装方法很简单，一般情况下只需要下载主题包解压后完整的，复制到你的 GitHub Pages 的项目目录里，并覆盖你之前的文件即可，有些特殊的主题要参考作者给的安装步骤，这里我随意的更换了一个主题。</p><figure tabindex="0" draggable="false" class="ss-img-wrapper custom-width" contenteditable="false"><img src="https://cdn.sspai.com/20190508161453.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt width="620" data-original="https://cdn.sspai.com/20190508161453.png"><figcaption class="ss-image-caption"></figcaption></figure><p>主题里的所有关键性配置都在 _config.yml 文件中，你可以根据个人的喜好和不同主题支持的功能来修改具体的内容，这里就不做展开。</p><p>到这里完整的搭建的流程已经结束了，你已经可以正常访问你一路配置下来的博客了，接下来你只需要找一个趁手的 Markdown 编辑器来编辑在你本地 GitHub Pages 项目中的 _posts 文件夹里的文章，并使用前面提到的两种方式将文章同步到 GitHub 上即可。需要注意的是，文章的内容和标题需要按照 Jekyll 的格式进行写作。</p><p>文章的文件名遵循下面的格式：</p><pre><code><div>年-月-日-标题.markdown</div></code></pre><p>文章内容顶部必须有下面的 YAML 头信息：</p><pre><code><div>---layout: posttitle: Blogging Like a Hacker---</div></code></pre><h2 id="ss-H2-1557303542244">尾巴</h2><p>其实除了 Jekyll 还有非常多的第三方的静态模板系统来搭建 GitHub Pages。比如：</p><ul><li>Node.js 编写的 Hexo</li><li>Go 编写的 Hugo</li><li>Python 编写的 Pelican</li><li>以及更人性化的 Gridea</li></ul><p>他们在各自的基础上实现了更多的功能，比如分析统计、搜索、评论系统、广告、分享系统等。喜欢折腾的同学不妨可以尝试尝试，未来如果有机会希望能更详细的给大家分享一下。</p><p><br></p></body></html></div></div></article></div></div></div></div></body>]]></content>
    
    <summary type="html">
    
      
      
        
&lt;body id=&quot;appBody&quot;&gt;
  &lt;div id=&quot;root&quot;&gt;&lt;div id=&quot;app&quot; data-server-rendered=&quot;true&quot; data-v-32cbd803&gt;&lt;div id=&quot;header&quot; class=&quot;header&quot; data-v-1e5e1
      
    
    </summary>
    
    
      <category term="Course" scheme="https://eliasliangyu.github.io/tags/Course/"/>
    
  </entry>
  
</feed>
